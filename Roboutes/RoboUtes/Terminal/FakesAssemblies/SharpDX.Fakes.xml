<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpDX.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SharpDXDelegates">
            <summary>Contains custom delegates used for the stubs and shims of SharpDX</summary>
        </member>
        <member name="T:SharpDX.Diagnostics.Fakes.ShimComObjectEventArgs">
            <summary>Shim type of SharpDX.Diagnostics.ComObjectEventArgs</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.ShimComObjectEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.ShimComObjectEventArgs.#ctor(SharpDX.Diagnostics.ComObjectEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Diagnostics.Fakes.ShimComObjectEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.ShimComObjectEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.ShimComObjectEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimComObjectEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimComObjectEventArgs.ConstructorComObject">
            <summary>Sets the shim of ComObjectEventArgs.ComObjectEventArgs(ComObject o)</summary>
        </member>
        <member name="T:SharpDX.Diagnostics.Fakes.ShimObjectReference">
            <summary>Shim type of SharpDX.Diagnostics.ObjectReference</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.ShimObjectReference.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.ShimObjectReference.#ctor(SharpDX.Diagnostics.ObjectReference)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Diagnostics.Fakes.ShimObjectReference.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.AllInstances.CreationTimeGet">
            <summary>Sets the shim of ObjectReference.get_CreationTime()</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.AllInstances.CreationTimeSetDateTime">
            <summary>Sets the shim of ObjectReference.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.AllInstances.IsAliveGet">
            <summary>Sets the shim of ObjectReference.get_IsAlive()</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.AllInstances.ObjectGet">
            <summary>Sets the shim of ObjectReference.get_Object()</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.AllInstances.ObjectSetWeakReference">
            <summary>Sets the shim of ObjectReference.set_Object(WeakReference value)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.AllInstances.StackTraceGet">
            <summary>Sets the shim of ObjectReference.get_StackTrace()</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.AllInstances.StackTraceSetString">
            <summary>Sets the shim of ObjectReference.set_StackTrace(String value)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.AllInstances.ToString01">
            <summary>Sets the shim of ObjectReference.ToString()</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.ShimObjectReference.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.ShimObjectReference.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.ConstructorDateTimeComObjectString">
            <summary>Sets the shim of ObjectReference.ObjectReference(DateTime creationTime, ComObject comObject, String stackTrace)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.CreationTimeGet">
            <summary>Sets the shim of ObjectReference.get_CreationTime()</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.CreationTimeSetDateTime">
            <summary>Sets the shim of ObjectReference.set_CreationTime(DateTime value)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.IsAliveGet">
            <summary>Sets the shim of ObjectReference.get_IsAlive()</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.ObjectGet">
            <summary>Sets the shim of ObjectReference.get_Object()</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.ObjectSetWeakReference">
            <summary>Sets the shim of ObjectReference.set_Object(WeakReference value)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.StackTraceGet">
            <summary>Sets the shim of ObjectReference.get_StackTrace()</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.StackTraceSetString">
            <summary>Sets the shim of ObjectReference.set_StackTrace(String value)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectReference.ToString">
            <summary>Sets the shim of ObjectReference.ToString()</summary>
        </member>
        <member name="T:SharpDX.Diagnostics.Fakes.ShimObjectTracker">
            <summary>Shim type of SharpDX.Diagnostics.ObjectTracker</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.ShimObjectTracker.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.ShimObjectTracker.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.ShimObjectTracker.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.FindActiveObjects">
            <summary>Sets the shim of ObjectTracker.FindActiveObjects()</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.FindComObject">
            <summary>Sets the shim of ObjectTracker.Find(ComObject comObject)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.FindIntPtr">
            <summary>Sets the shim of ObjectTracker.Find(IntPtr comObjectPtr)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.GetStackTrace">
            <summary>Sets the shim of ObjectTracker.GetStackTrace()</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.ObjectReferencesGet">
            <summary>Sets the shim of ObjectTracker.get_ObjectReferences()</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.OnTrackedComObject">
            <summary>Sets the shim of ObjectTracker.OnTracked(ComObject obj)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.OnUnTrackedComObject">
            <summary>Sets the shim of ObjectTracker.OnUnTracked(ComObject obj)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.ReportActiveObjects">
            <summary>Sets the shim of ObjectTracker.ReportActiveObjects()</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.StaticConstructor">
            <summary>Sets the shim of ObjectTracker.ObjectTracker()</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.TrackComObject">
            <summary>Sets the shim of ObjectTracker.Track(ComObject comObject)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.TrackedAddEventHandlerOfComObjectEventArgs">
            <summary>Sets the shim of ObjectTracker.add_Tracked(EventHandler`1&lt;ComObjectEventArgs&gt; value)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.TrackedRemoveEventHandlerOfComObjectEventArgs">
            <summary>Sets the shim of ObjectTracker.remove_Tracked(EventHandler`1&lt;ComObjectEventArgs&gt; value)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.UnTrackComObject">
            <summary>Sets the shim of ObjectTracker.UnTrack(ComObject comObject)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.UnTrackedAddEventHandlerOfComObjectEventArgs">
            <summary>Sets the shim of ObjectTracker.add_UnTracked(EventHandler`1&lt;ComObjectEventArgs&gt; value)</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.ShimObjectTracker.UnTrackedRemoveEventHandlerOfComObjectEventArgs">
            <summary>Sets the shim of ObjectTracker.remove_UnTracked(EventHandler`1&lt;ComObjectEventArgs&gt; value)</summary>
        </member>
        <member name="T:SharpDX.Diagnostics.Fakes.StubComObjectEventArgs">
            <summary>Stub type of SharpDX.Diagnostics.ComObjectEventArgs</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.StubComObjectEventArgs.#ctor(SharpDX.ComObject)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.StubComObjectEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.StubComObjectEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubComObjectEventArgs</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.StubComObjectEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.StubComObjectEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SharpDX.Diagnostics.Fakes.StubObjectReference">
            <summary>Stub type of SharpDX.Diagnostics.ObjectReference</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.StubObjectReference.#ctor(System.DateTime,SharpDX.ComObject,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.StubObjectReference.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.StubObjectReference.InitializeStub">
            <summary>Initializes a new instance of type StubObjectReference</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.StubObjectReference.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Diagnostics.Fakes.StubObjectReference.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SharpDX.Diagnostics.Fakes.StubObjectReference.ToString">
            <summary>Sets the stub of ObjectReference.ToString()</summary>
        </member>
        <member name="F:SharpDX.Diagnostics.Fakes.StubObjectReference.ToString01">
            <summary>Sets the stub of ObjectReference.ToString()</summary>
        </member>
        <member name="T:SharpDX.Direct3D.Fakes.ShimBlob">
            <summary>Shim type of SharpDX.Direct3D.Blob</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimBlob.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimBlob.#ctor(SharpDX.Direct3D.Blob)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Direct3D.Fakes.ShimBlob.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimBlob.AllInstances.BufferPointerGet">
            <summary>Sets the shim of Blob.get_BufferPointer()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimBlob.AllInstances.BufferSizeGet">
            <summary>Sets the shim of Blob.get_BufferSize()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimBlob.AllInstances.GetBufferPointer">
            <summary>Sets the shim of Blob.GetBufferPointer()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimBlob.AllInstances.GetBufferSize">
            <summary>Sets the shim of Blob.GetBufferSize()</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimBlob.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimBlob.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimBlob.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimBlob.Bind(SharpDX.IUnknown)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimBlob.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimBlob.BufferPointerGet">
            <summary>Sets the shim of Blob.get_BufferPointer()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimBlob.BufferSizeGet">
            <summary>Sets the shim of Blob.get_BufferSize()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimBlob.ConstructorIntPtr">
            <summary>Sets the shim of Blob.Blob(IntPtr nativePtr)</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimBlob.ExplicitOpIntPtrBlob">
            <summary>Sets the shim of Blob.op_Explicit(IntPtr nativePointer)</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimBlob.GetBufferPointer">
            <summary>Sets the shim of Blob.GetBufferPointer()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimBlob.GetBufferSize">
            <summary>Sets the shim of Blob.GetBufferSize()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimBlob.ImplicitOpBlobDataPointer">
            <summary>Sets the shim of Blob.op_Implicit(Blob blob)</summary>
        </member>
        <member name="T:SharpDX.Direct3D.Fakes.ShimCommonGuid">
            <summary>Shim type of SharpDX.Direct3D.CommonGuid</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimCommonGuid.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimCommonGuid.#ctor(SharpDX.Direct3D.CommonGuid)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Direct3D.Fakes.ShimCommonGuid.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimCommonGuid.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimCommonGuid.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimCommonGuid.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimCommonGuid.Constructor">
            <summary>Sets the shim of CommonGuid.CommonGuid()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimCommonGuid.StaticConstructor">
            <summary>Sets the shim of CommonGuid.CommonGuid()</summary>
        </member>
        <member name="T:SharpDX.Direct3D.Fakes.ShimDeviceMultithread">
            <summary>Shim type of SharpDX.Direct3D.DeviceMultithread</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.#ctor(SharpDX.Direct3D.DeviceMultithread)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.AllInstances.Enter">
            <summary>Sets the shim of DeviceMultithread.Enter()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.AllInstances.GetMultithreadProtected">
            <summary>Sets the shim of DeviceMultithread.GetMultithreadProtected()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.AllInstances.Leave">
            <summary>Sets the shim of DeviceMultithread.Leave()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.AllInstances.SetMultithreadProtectedRawBool">
            <summary>Sets the shim of DeviceMultithread.SetMultithreadProtected(RawBool bMTProtect)</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.Bind(SharpDX.IUnknown)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.ConstructorIntPtr">
            <summary>Sets the shim of DeviceMultithread.DeviceMultithread(IntPtr nativePtr)</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.Enter">
            <summary>Sets the shim of DeviceMultithread.Enter()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.ExplicitOpIntPtrDeviceMultithread">
            <summary>Sets the shim of DeviceMultithread.op_Explicit(IntPtr nativePointer)</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.GetMultithreadProtected">
            <summary>Sets the shim of DeviceMultithread.GetMultithreadProtected()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.Leave">
            <summary>Sets the shim of DeviceMultithread.Leave()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimDeviceMultithread.SetMultithreadProtectedRawBool">
            <summary>Sets the shim of DeviceMultithread.SetMultithreadProtected(RawBool bMTProtect)</summary>
        </member>
        <member name="T:SharpDX.Direct3D.Fakes.ShimShaderMacro">
            <summary>Shim type of SharpDX.Direct3D.ShaderMacro</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimShaderMacro.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Direct3D.Fakes.ShimShaderMacro.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimShaderMacro.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.ShimShaderMacro.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimShaderMacro.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimShaderMacro.EqualityOpShaderMacroShaderMacro">
            <summary>Sets the shim of ShaderMacro.op_Equality(ShaderMacro left, ShaderMacro right)</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.ShimShaderMacro.InequalityOpShaderMacroShaderMacro">
            <summary>Sets the shim of ShaderMacro.op_Inequality(ShaderMacro left, ShaderMacro right)</summary>
        </member>
        <member name="T:SharpDX.Direct3D.Fakes.StubBlob">
            <summary>Stub type of SharpDX.Direct3D.Blob</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubBlob.#ctor(System.IntPtr)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.StubBlob.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubBlob.Dispose(System.Boolean)">
            <summary>Sets the stub of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Direct3D.Fakes.StubBlob.DisposeBoolean">
            <summary>Sets the stub of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubBlob.InitializeStub">
            <summary>Initializes a new instance of type StubBlob</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.StubBlob.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.StubBlob.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubBlob.NativePointerUpdated(System.IntPtr)">
            <summary>Sets the stub of ComObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="F:SharpDX.Direct3D.Fakes.StubBlob.NativePointerUpdatedIntPtr">
            <summary>Sets the stub of ComObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubBlob.NativePointerUpdating">
            <summary>Sets the stub of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="F:SharpDX.Direct3D.Fakes.StubBlob.NativePointerUpdating01">
            <summary>Sets the stub of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="T:SharpDX.Direct3D.Fakes.StubCommonGuid">
            <summary>Stub type of SharpDX.Direct3D.CommonGuid</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubCommonGuid.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.StubCommonGuid.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubCommonGuid.InitializeStub">
            <summary>Initializes a new instance of type StubCommonGuid</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.StubCommonGuid.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.StubCommonGuid.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SharpDX.Direct3D.Fakes.StubDestructionNotifier">
            <summary>Stub type of SharpDX.Direct3D.DestructionNotifier</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubDestructionNotifier.#ctor">
            <summary>Initializes a new instance of type StubDestructionNotifier</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubDestructionNotifier.AttachBackingFieldToShadow">
            <summary>Attaches delegates to emulate StubDestructionNotifier.Shadow as a property with a backing field.</summary>
        </member>
        <member name="F:SharpDX.Direct3D.Fakes.StubDestructionNotifier.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.StubDestructionNotifier.SharpDX#ICallbackable#Shadow">
            <summary>Sets the stub of ICallbackable.get_Shadow()</summary>
        </member>
        <member name="F:SharpDX.Direct3D.Fakes.StubDestructionNotifier.ShadowGet">
            <summary>Sets the stub of ICallbackable.get_Shadow()</summary>
        </member>
        <member name="F:SharpDX.Direct3D.Fakes.StubDestructionNotifier.ShadowSetIDisposable">
            <summary>Sets the stub of ICallbackable.set_Shadow(IDisposable value)</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubDestructionNotifier.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:SharpDX.Direct3D.Fakes.StubDeviceMultithread">
            <summary>Stub type of SharpDX.Direct3D.DeviceMultithread</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubDeviceMultithread.#ctor(System.IntPtr)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.StubDeviceMultithread.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubDeviceMultithread.Dispose(System.Boolean)">
            <summary>Sets the stub of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Direct3D.Fakes.StubDeviceMultithread.DisposeBoolean">
            <summary>Sets the stub of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubDeviceMultithread.InitializeStub">
            <summary>Initializes a new instance of type StubDeviceMultithread</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.StubDeviceMultithread.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Direct3D.Fakes.StubDeviceMultithread.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubDeviceMultithread.NativePointerUpdated(System.IntPtr)">
            <summary>Sets the stub of ComObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="F:SharpDX.Direct3D.Fakes.StubDeviceMultithread.NativePointerUpdatedIntPtr">
            <summary>Sets the stub of ComObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="M:SharpDX.Direct3D.Fakes.StubDeviceMultithread.NativePointerUpdating">
            <summary>Sets the stub of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="F:SharpDX.Direct3D.Fakes.StubDeviceMultithread.NativePointerUpdating01">
            <summary>Sets the stub of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimCallbackBase">
            <summary>Shim type of SharpDX.CallbackBase</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCallbackBase.#ctor(SharpDX.CallbackBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimCallbackBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCallbackBase.AllInstances.DisposeBoolean">
            <summary>Sets the shim of CallbackBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCallbackBase.AllInstances.ShadowSharpDXICallbackableget">
            <summary>Sets the shim of CallbackBase.SharpDX.ICallbackable.get_Shadow()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCallbackBase.AllInstances.ShadowSharpDXICallbackablesetIDisposable">
            <summary>Sets the shim of CallbackBase.SharpDX.ICallbackable.set_Shadow(IDisposable value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCallbackBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCallbackBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCallbackBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCallbackBase.Bind(SharpDX.ICallbackable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCallbackBase.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCallbackBase.Constructor">
            <summary>Sets the shim of CallbackBase.CallbackBase()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCallbackBase.DisposeBoolean">
            <summary>Sets the shim of CallbackBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCallbackBase.ShadowSharpDXICallbackableget">
            <summary>Sets the shim of CallbackBase.SharpDX.ICallbackable.get_Shadow()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCallbackBase.ShadowSharpDXICallbackablesetIDisposable">
            <summary>Sets the shim of CallbackBase.SharpDX.ICallbackable.set_Shadow(IDisposable value)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimComArray">
            <summary>Shim type of SharpDX.ComArray</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComArray.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComArray.#ctor(SharpDX.ComArray)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimComArray.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ComArray.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.AllInstances.GetEnumerator">
            <summary>Sets the shim of ComArray.GetEnumerator()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.AllInstances.GetInt32">
            <summary>Sets the shim of ComArray.Get(Int32 index)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.AllInstances.LengthGet">
            <summary>Sets the shim of ComArray.get_Length()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.AllInstances.NativePointerGet">
            <summary>Sets the shim of ComArray.get_NativePointer()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.AllInstances.SetFromNativeInt32ComObject">
            <summary>Sets the shim of ComArray.SetFromNative(Int32 index, ComObject value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.AllInstances.SetInt32ComObject">
            <summary>Sets the shim of ComArray.Set(Int32 index, ComObject value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComArray.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComArray.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComArray.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComArray.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.ConstructorComObjectArray">
            <summary>Sets the shim of ComArray.ComArray(ComObject[] array)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.ConstructorInt32">
            <summary>Sets the shim of ComArray.ComArray(Int32 size)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.DisposeBoolean">
            <summary>Sets the shim of ComArray.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.GetEnumerator">
            <summary>Sets the shim of ComArray.GetEnumerator()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.GetInt32">
            <summary>Sets the shim of ComArray.Get(Int32 index)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.LengthGet">
            <summary>Sets the shim of ComArray.get_Length()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.NativePointerGet">
            <summary>Sets the shim of ComArray.get_NativePointer()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.SetFromNativeInt32ComObject">
            <summary>Sets the shim of ComArray.SetFromNative(Int32 index, ComObject value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray.SetInt32ComObject">
            <summary>Sets the shim of ComArray.Set(Int32 index, ComObject value)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimComArray`1">
            <summary>Shim type of SharpDX.ComArray`1</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComArray`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComArray`1.#ctor(SharpDX.ComArray{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimComArray`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of ComArray`1.GetEnumerator()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray`1.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ComArray`1.get_Item(Int32 i)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray`1.AllInstances.ItemSetInt32T0">
            <summary>Sets the shim of ComArray`1.set_Item(Int32 i, !0 value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComArray`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComArray`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComArray`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComArray`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComArray`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray`1.ConstructorInt32">
            <summary>Sets the shim of ComArray`1.ComArray`1(Int32 size)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray`1.ConstructorT0Array">
            <summary>Sets the shim of ComArray`1.ComArray`1(!0[] array)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray`1.GetEnumerator">
            <summary>Sets the shim of ComArray`1.GetEnumerator()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray`1.ItemGetInt32">
            <summary>Sets the shim of ComArray`1.get_Item(Int32 i)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComArray`1.ItemSetInt32T0">
            <summary>Sets the shim of ComArray`1.set_Item(Int32 i, !0 value)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimComObject">
            <summary>Shim type of SharpDX.ComObject</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.#ctor(SharpDX.ComObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimComObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.AllInstances.NativePointerUpdatedIntPtr">
            <summary>Sets the shim of ComObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.AllInstances.NativePointerUpdating">
            <summary>Sets the shim of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.AllInstances.QueryInterfaceFromOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{SharpDX.ComObject,``0})">
            <summary>Sets the shim of ComObject.QueryInterfaceFrom(!!0 fromObject)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.AllInstances.QueryInterfaceGuidIntPtrOut">
            <summary>Sets the shim of ComObject.QueryInterface(Guid guid, IntPtr&amp; outPtr)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.AllInstances.QueryInterfaceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SharpDX.ComObject,``0})">
            <summary>Sets the shim of ComObject.QueryInterface()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.AllInstances.QueryInterfaceOrNullGuid">
            <summary>Sets the shim of ComObject.QueryInterfaceOrNull(Guid guid)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.AllInstances.QueryInterfaceOrNullOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SharpDX.ComObject,``0})">
            <summary>Sets the shim of ComObject.QueryInterfaceOrNull()</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.AllInstances.QueryInterfaceUnsafeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SharpDX.ComObject,``0})">
            <summary>Sets the shim of ComObject.QueryInterfaceUnsafe()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.AllInstances.SharpDXIUnknownAddReference">
            <summary>Sets the shim of ComObject.SharpDX.IUnknown.AddReference()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.AllInstances.SharpDXIUnknownQueryInterfaceGuidRefIntPtrOut">
            <summary>Sets the shim of ComObject.SharpDX.IUnknown.QueryInterface(Guid&amp; guid, IntPtr&amp; comObject)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.AllInstances.SharpDXIUnknownRelease">
            <summary>Sets the shim of ComObject.SharpDX.IUnknown.Release()</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.AsOf1IntPtr``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IntPtr,``0})">
            <summary>Sets the shim of ComObject.As(IntPtr iunknownPtr)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.AsOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Sets the shim of ComObject.As(Object comObject)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.AsUnsafeOf1IntPtr``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IntPtr,``0})">
            <summary>Sets the shim of ComObject.AsUnsafe(IntPtr iunknownPtr)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.Bind(SharpDX.IUnknown)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.Constructor">
            <summary>Sets the shim of ComObject.ComObject()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.ConstructorIntPtr">
            <summary>Sets the shim of ComObject.ComObject(IntPtr pointer)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.ConstructorObject">
            <summary>Sets the shim of ComObject.ComObject(Object iunknowObject)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.DisposeBoolean">
            <summary>Sets the shim of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.EqualsComObjectOf1M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0,System.Boolean})">
            <summary>Sets the shim of ComObject.EqualsComObject(!!0 left, !!0 right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.ExplicitOpIntPtrComObject">
            <summary>Sets the shim of ComObject.op_Explicit(IntPtr nativePointer)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.NativePointerUpdatedIntPtr">
            <summary>Sets the shim of ComObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.NativePointerUpdating">
            <summary>Sets the shim of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.QueryInterfaceFromOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets the shim of ComObject.QueryInterfaceFrom(!!0 fromObject)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.QueryInterfaceGuidIntPtrOut">
            <summary>Sets the shim of ComObject.QueryInterface(Guid guid, IntPtr&amp; outPtr)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.QueryInterfaceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of ComObject.QueryInterface()</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.QueryInterfaceOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Sets the shim of ComObject.QueryInterface(Object comObject)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.QueryInterfaceOrNullGuid">
            <summary>Sets the shim of ComObject.QueryInterfaceOrNull(Guid guid)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.QueryInterfaceOrNullOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of ComObject.QueryInterfaceOrNull()</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.QueryInterfaceOrNullOf1IntPtr``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IntPtr,``0})">
            <summary>Sets the shim of ComObject.QueryInterfaceOrNull(IntPtr comPointer)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObject.QueryInterfaceUnsafeOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of ComObject.QueryInterfaceUnsafe()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.SharpDXIUnknownAddReference">
            <summary>Sets the shim of ComObject.SharpDX.IUnknown.AddReference()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObject.SharpDXIUnknownRelease">
            <summary>Sets the shim of ComObject.SharpDX.IUnknown.Release()</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimComObjectCallback">
            <summary>Shim type of SharpDX.ComObjectCallback</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObjectCallback.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObjectCallback.#ctor(SharpDX.ComObjectCallback)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimComObjectCallback.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObjectCallback.AllInstances.ShadowGet">
            <summary>Sets the shim of ComObjectCallback.get_Shadow()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObjectCallback.AllInstances.ShadowSetIDisposable">
            <summary>Sets the shim of ComObjectCallback.set_Shadow(IDisposable value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObjectCallback.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObjectCallback.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObjectCallback.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObjectCallback.Bind(SharpDX.ICallbackable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObjectCallback.Bind(SharpDX.IUnknown)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimComObjectCallback.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObjectCallback.Constructor">
            <summary>Sets the shim of ComObjectCallback.ComObjectCallback()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObjectCallback.ConstructorIntPtr">
            <summary>Sets the shim of ComObjectCallback.ComObjectCallback(IntPtr pointer)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObjectCallback.ShadowGet">
            <summary>Sets the shim of ComObjectCallback.get_Shadow()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimComObjectCallback.ShadowSetIDisposable">
            <summary>Sets the shim of ComObjectCallback.set_Shadow(IDisposable value)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimCompilationException">
            <summary>Shim type of SharpDX.CompilationException</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCompilationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCompilationException.#ctor(SharpDX.CompilationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimCompilationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCompilationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCompilationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCompilationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationException.ConstructorResultString">
            <summary>Sets the shim of CompilationException.CompilationException(Result errorCode, String message)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationException.ConstructorString">
            <summary>Sets the shim of CompilationException.CompilationException(String message)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimCompilationResultBase`1">
            <summary>Shim type of SharpDX.CompilationResultBase`1</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCompilationResultBase`1.#ctor(SharpDX.CompilationResultBase{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimCompilationResultBase`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.AllInstances.BytecodeGet">
            <summary>Sets the shim of CompilationResultBase`1.get_Bytecode()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.AllInstances.BytecodeSetT0">
            <summary>Sets the shim of CompilationResultBase`1.set_Bytecode(!0 value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.AllInstances.DisposeBoolean">
            <summary>Sets the shim of CompilationResultBase`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.AllInstances.HasErrorsGet">
            <summary>Sets the shim of CompilationResultBase`1.get_HasErrors()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.AllInstances.MessageGet">
            <summary>Sets the shim of CompilationResultBase`1.get_Message()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.AllInstances.MessageSetString">
            <summary>Sets the shim of CompilationResultBase`1.set_Message(String value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.AllInstances.ResultCodeGet">
            <summary>Sets the shim of CompilationResultBase`1.get_ResultCode()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.AllInstances.ResultCodeSetResult">
            <summary>Sets the shim of CompilationResultBase`1.set_ResultCode(Result value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCompilationResultBase`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCompilationResultBase`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCompilationResultBase`1.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.BytecodeGet">
            <summary>Sets the shim of CompilationResultBase`1.get_Bytecode()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.BytecodeSetT0">
            <summary>Sets the shim of CompilationResultBase`1.set_Bytecode(!0 value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.ConstructorT0ResultString">
            <summary>Sets the shim of CompilationResultBase`1.CompilationResultBase`1(!0 bytecode, Result resultCode, String message)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.DisposeBoolean">
            <summary>Sets the shim of CompilationResultBase`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.HasErrorsGet">
            <summary>Sets the shim of CompilationResultBase`1.get_HasErrors()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.MessageGet">
            <summary>Sets the shim of CompilationResultBase`1.get_Message()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.MessageSetString">
            <summary>Sets the shim of CompilationResultBase`1.set_Message(String value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.ResultCodeGet">
            <summary>Sets the shim of CompilationResultBase`1.get_ResultCode()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCompilationResultBase`1.ResultCodeSetResult">
            <summary>Sets the shim of CompilationResultBase`1.set_ResultCode(Result value)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimConfiguration">
            <summary>Shim type of SharpDX.Configuration</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimConfiguration.StaticConstructor">
            <summary>Sets the shim of Configuration.Configuration()</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimCppObject">
            <summary>Shim type of SharpDX.CppObject</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCppObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCppObject.#ctor(SharpDX.CppObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimCppObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.AllInstances.DisposeBoolean">
            <summary>Sets the shim of CppObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.AllInstances.FromTempCppObject">
            <summary>Sets the shim of CppObject.FromTemp(CppObject temp)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.AllInstances.FromTempIntPtr">
            <summary>Sets the shim of CppObject.FromTemp(IntPtr temp)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.AllInstances.NativePointerGet">
            <summary>Sets the shim of CppObject.get_NativePointer()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.AllInstances.NativePointerSetIntPtr">
            <summary>Sets the shim of CppObject.set_NativePointer(IntPtr value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.AllInstances.NativePointerUpdatedIntPtr">
            <summary>Sets the shim of CppObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.AllInstances.NativePointerUpdating">
            <summary>Sets the shim of CppObject.NativePointerUpdating()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.AllInstances.TagGet">
            <summary>Sets the shim of CppObject.get_Tag()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.AllInstances.TagSetObject">
            <summary>Sets the shim of CppObject.set_Tag(Object value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCppObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCppObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCppObject.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.Constructor">
            <summary>Sets the shim of CppObject.CppObject()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.ConstructorIntPtr">
            <summary>Sets the shim of CppObject.CppObject(IntPtr pointer)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.DisposeBoolean">
            <summary>Sets the shim of CppObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.ExplicitOpCppObjectIntPtr">
            <summary>Sets the shim of CppObject.op_Explicit(CppObject cppObject)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCppObject.FromPointerOf1IntPtr``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IntPtr,``0})">
            <summary>Sets the shim of CppObject.FromPointer(IntPtr comObjectPtr)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCppObject.FromPointerUnsafeOf1IntPtr``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.IntPtr,``0})">
            <summary>Sets the shim of CppObject.FromPointerUnsafe(IntPtr comObjectPtr)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.FromTempCppObject">
            <summary>Sets the shim of CppObject.FromTemp(CppObject temp)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.FromTempIntPtr">
            <summary>Sets the shim of CppObject.FromTemp(IntPtr temp)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.NativePointerGet">
            <summary>Sets the shim of CppObject.get_NativePointer()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.NativePointerSetIntPtr">
            <summary>Sets the shim of CppObject.set_NativePointer(IntPtr value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.NativePointerUpdatedIntPtr">
            <summary>Sets the shim of CppObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.NativePointerUpdating">
            <summary>Sets the shim of CppObject.NativePointerUpdating()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.TagGet">
            <summary>Sets the shim of CppObject.get_Tag()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimCppObject.TagSetObject">
            <summary>Sets the shim of CppObject.set_Tag(Object value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimCppObject.ToCallbackPtrOf1ICallbackable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SharpDX.ICallbackable,System.IntPtr})">
            <summary>Sets the shim of CppObject.ToCallbackPtr(ICallbackable callback)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDataBox">
            <summary>Shim type of SharpDX.DataBox</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataBox.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDataBox.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataBox.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataBox.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBox.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDataBuffer">
            <summary>Shim type of SharpDX.DataBuffer</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataBuffer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataBuffer.#ctor(SharpDX.DataBuffer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDataBuffer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.AllInstances.ClearByte">
            <summary>Sets the shim of DataBuffer.Clear(Byte value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.AllInstances.DataPointerGet">
            <summary>Sets the shim of DataBuffer.get_DataPointer()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DataBuffer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.AllInstances.SetInt32Boolean">
            <summary>Sets the shim of DataBuffer.Set(Int32 positionInBytes, Boolean value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.AllInstances.SetInt32IntPtrInt64">
            <summary>Sets the shim of DataBuffer.Set(Int32 positionInBytes, IntPtr source, Int64 count)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.AllInstances.SizeGet">
            <summary>Sets the shim of DataBuffer.get_Size()</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataBuffer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataBuffer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataBuffer.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.ClearByte">
            <summary>Sets the shim of DataBuffer.Clear(Byte value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.ConstructorBlob">
            <summary>Sets the shim of DataBuffer.DataBuffer(Blob buffer)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.ConstructorDataPointer">
            <summary>Sets the shim of DataBuffer.DataBuffer(DataPointer dataPointer)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.ConstructorInt32">
            <summary>Sets the shim of DataBuffer.DataBuffer(Int32 sizeInBytes)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.ConstructorIntPtrInt32">
            <summary>Sets the shim of DataBuffer.DataBuffer(IntPtr userBuffer, Int32 sizeInBytes)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.DataPointerGet">
            <summary>Sets the shim of DataBuffer.get_DataPointer()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.DisposeBoolean">
            <summary>Sets the shim of DataBuffer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.ImplicitOpDataBufferDataPointer">
            <summary>Sets the shim of DataBuffer.op_Implicit(DataBuffer from)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.SetInt32Boolean">
            <summary>Sets the shim of DataBuffer.Set(Int32 positionInBytes, Boolean value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.SetInt32IntPtrInt64">
            <summary>Sets the shim of DataBuffer.Set(Int32 positionInBytes, IntPtr source, Int64 count)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataBuffer.SizeGet">
            <summary>Sets the shim of DataBuffer.get_Size()</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDataPointer">
            <summary>Shim type of SharpDX.DataPointer</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataPointer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDataPointer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataPointer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataPointer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataPointer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataPointer.EqualityOpDataPointerDataPointer">
            <summary>Sets the shim of DataPointer.op_Equality(DataPointer left, DataPointer right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataPointer.InequalityOpDataPointerDataPointer">
            <summary>Sets the shim of DataPointer.op_Inequality(DataPointer left, DataPointer right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataPointer.StaticConstructor">
            <summary>Sets the shim of DataPointer.DataPointer()</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDataRectangle">
            <summary>Shim type of SharpDX.DataRectangle</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataRectangle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDataRectangle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataRectangle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataRectangle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataRectangle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDataStream">
            <summary>Shim type of SharpDX.DataStream</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataStream.#ctor(SharpDX.DataStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDataStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.CanReadGet">
            <summary>Sets the shim of DataStream.get_CanRead()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.CanSeekGet">
            <summary>Sets the shim of DataStream.get_CanSeek()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.CanWriteGet">
            <summary>Sets the shim of DataStream.get_CanWrite()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.DataPointerGet">
            <summary>Sets the shim of DataStream.get_DataPointer()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DataStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.Flush">
            <summary>Sets the shim of DataStream.Flush()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.LengthGet">
            <summary>Sets the shim of DataStream.get_Length()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.PositionGet">
            <summary>Sets the shim of DataStream.get_Position()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.PositionPointerGet">
            <summary>Sets the shim of DataStream.get_PositionPointer()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of DataStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.ReadByte">
            <summary>Sets the shim of DataStream.ReadByte()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of DataStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.ReadIntPtrInt32Int32">
            <summary>Sets the shim of DataStream.Read(IntPtr buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.RemainingLengthGet">
            <summary>Sets the shim of DataStream.get_RemainingLength()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of DataStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.SetLengthInt64">
            <summary>Sets the shim of DataStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of DataStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.WriteIntPtrInt32Int32">
            <summary>Sets the shim of DataStream.Write(IntPtr buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.AllInstances.WriteRangeIntPtrInt64">
            <summary>Sets the shim of DataStream.WriteRange(IntPtr source, Int64 count)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDataStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.CanReadGet">
            <summary>Sets the shim of DataStream.get_CanRead()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.CanSeekGet">
            <summary>Sets the shim of DataStream.get_CanSeek()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.CanWriteGet">
            <summary>Sets the shim of DataStream.get_CanWrite()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.ConstructorBlob">
            <summary>Sets the shim of DataStream.DataStream(Blob buffer)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.ConstructorDataPointer">
            <summary>Sets the shim of DataStream.DataStream(DataPointer dataPointer)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.ConstructorInt32BooleanBoolean">
            <summary>Sets the shim of DataStream.DataStream(Int32 sizeInBytes, Boolean canRead, Boolean canWrite)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.ConstructorIntPtrInt64BooleanBoolean">
            <summary>Sets the shim of DataStream.DataStream(IntPtr userBuffer, Int64 sizeInBytes, Boolean canRead, Boolean canWrite)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.DataPointerGet">
            <summary>Sets the shim of DataStream.get_DataPointer()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.DisposeBoolean">
            <summary>Sets the shim of DataStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.Flush">
            <summary>Sets the shim of DataStream.Flush()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.ImplicitOpDataStreamDataPointer">
            <summary>Sets the shim of DataStream.op_Implicit(DataStream from)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.LengthGet">
            <summary>Sets the shim of DataStream.get_Length()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.PositionGet">
            <summary>Sets the shim of DataStream.get_Position()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.PositionPointerGet">
            <summary>Sets the shim of DataStream.get_PositionPointer()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.PositionSetInt64">
            <summary>Sets the shim of DataStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.ReadByte">
            <summary>Sets the shim of DataStream.ReadByte()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of DataStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.ReadIntPtrInt32Int32">
            <summary>Sets the shim of DataStream.Read(IntPtr buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.RemainingLengthGet">
            <summary>Sets the shim of DataStream.get_RemainingLength()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.SeekInt64SeekOrigin">
            <summary>Sets the shim of DataStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.SetLengthInt64">
            <summary>Sets the shim of DataStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.WriteByteArrayInt32Int32">
            <summary>Sets the shim of DataStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.WriteIntPtrInt32Int32">
            <summary>Sets the shim of DataStream.Write(IntPtr buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDataStream.WriteRangeIntPtrInt64">
            <summary>Sets the shim of DataStream.WriteRange(IntPtr source, Int64 count)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDisposeBase">
            <summary>Shim type of SharpDX.DisposeBase</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeBase.#ctor(SharpDX.DisposeBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDisposeBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.AllInstances.CheckAndDisposeBoolean">
            <summary>Sets the shim of DisposeBase.CheckAndDispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.AllInstances.Dispose">
            <summary>Sets the shim of DisposeBase.Dispose()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.AllInstances.DisposedAddEventHandlerOfEventArgs">
            <summary>Sets the shim of DisposeBase.add_Disposed(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.AllInstances.DisposedRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of DisposeBase.remove_Disposed(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.AllInstances.DisposingAddEventHandlerOfEventArgs">
            <summary>Sets the shim of DisposeBase.add_Disposing(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.AllInstances.DisposingRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of DisposeBase.remove_Disposing(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.AllInstances.IsDisposedGet">
            <summary>Sets the shim of DisposeBase.get_IsDisposed()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.AllInstances.IsDisposedSetBoolean">
            <summary>Sets the shim of DisposeBase.set_IsDisposed(Boolean value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeBase.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.CheckAndDisposeBoolean">
            <summary>Sets the shim of DisposeBase.CheckAndDispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.Constructor">
            <summary>Sets the shim of DisposeBase.DisposeBase()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.Dispose">
            <summary>Sets the shim of DisposeBase.Dispose()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.DisposedAddEventHandlerOfEventArgs">
            <summary>Sets the shim of DisposeBase.add_Disposed(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.DisposedRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of DisposeBase.remove_Disposed(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.DisposingAddEventHandlerOfEventArgs">
            <summary>Sets the shim of DisposeBase.add_Disposing(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.DisposingRemoveEventHandlerOfEventArgs">
            <summary>Sets the shim of DisposeBase.remove_Disposing(EventHandler`1&lt;EventArgs&gt; value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.IsDisposedGet">
            <summary>Sets the shim of DisposeBase.get_IsDisposed()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeBase.IsDisposedSetBoolean">
            <summary>Sets the shim of DisposeBase.set_IsDisposed(Boolean value)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDisposeCollector">
            <summary>Shim type of SharpDX.DisposeCollector</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeCollector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeCollector.#ctor(SharpDX.DisposeCollector)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDisposeCollector.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeCollector.AllInstances.CollectOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SharpDX.DisposeCollector,``0,``0})">
            <summary>Sets the shim of DisposeCollector.Collect(!!0 toDispose)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeCollector.AllInstances.CountGet">
            <summary>Sets the shim of DisposeCollector.get_Count()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeCollector.AllInstances.DisposeAndClear">
            <summary>Sets the shim of DisposeCollector.DisposeAndClear()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeCollector.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DisposeCollector.Dispose(Boolean disposeManagedResources)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeCollector.AllInstances.RemoveAndDisposeOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefAction{SharpDX.DisposeCollector,``0})">
            <summary>Sets the shim of DisposeCollector.RemoveAndDispose(!!0&amp; objectToDispose)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeCollector.AllInstances.RemoveOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{SharpDX.DisposeCollector,``0})">
            <summary>Sets the shim of DisposeCollector.Remove(!!0 toDisposeArg)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeCollector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeCollector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeCollector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeCollector.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeCollector.CollectOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>Sets the shim of DisposeCollector.Collect(!!0 toDispose)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeCollector.Constructor">
            <summary>Sets the shim of DisposeCollector.DisposeCollector()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeCollector.CountGet">
            <summary>Sets the shim of DisposeCollector.get_Count()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeCollector.DisposeAndClear">
            <summary>Sets the shim of DisposeCollector.DisposeAndClear()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeCollector.DisposeBoolean">
            <summary>Sets the shim of DisposeCollector.Dispose(Boolean disposeManagedResources)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeCollector.RemoveAndDisposeOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefAction{``0})">
            <summary>Sets the shim of DisposeCollector.RemoveAndDispose(!!0&amp; objectToDispose)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeCollector.RemoveOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>Sets the shim of DisposeCollector.Remove(!!0 toDisposeArg)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDisposeEventArgs">
            <summary>Shim type of SharpDX.DisposeEventArgs</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeEventArgs.#ctor(SharpDX.DisposeEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimDisposeEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimDisposeEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeEventArgs.ConstructorBoolean">
            <summary>Sets the shim of DisposeEventArgs.DisposeEventArgs(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeEventArgs.GetBoolean">
            <summary>Sets the shim of DisposeEventArgs.Get(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimDisposeEventArgs.StaticConstructor">
            <summary>Sets the shim of DisposeEventArgs.DisposeEventArgs()</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimPointerSize">
            <summary>Shim type of SharpDX.PointerSize</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimPointerSize.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.AdditionOpPointerSizePointerSize">
            <summary>Sets the shim of PointerSize.op_Addition(PointerSize left, PointerSize right)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimPointerSize.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimPointerSize.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimPointerSize.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.DivisionOpPointerSizeInt32">
            <summary>Sets the shim of PointerSize.op_Division(PointerSize value, Int32 scale)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.EqualityOpPointerSizePointerSize">
            <summary>Sets the shim of PointerSize.op_Equality(PointerSize left, PointerSize right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.ImplicitOpInt32PointerSize">
            <summary>Sets the shim of PointerSize.op_Implicit(Int32 value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.ImplicitOpInt64PointerSize">
            <summary>Sets the shim of PointerSize.op_Implicit(Int64 value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.ImplicitOpIntPtrPointerSize">
            <summary>Sets the shim of PointerSize.op_Implicit(IntPtr value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.ImplicitOpPointerSizeInt32">
            <summary>Sets the shim of PointerSize.op_Implicit(PointerSize value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.ImplicitOpPointerSizeInt64">
            <summary>Sets the shim of PointerSize.op_Implicit(PointerSize value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.ImplicitOpPointerSizeIntPtr">
            <summary>Sets the shim of PointerSize.op_Implicit(PointerSize value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.InequalityOpPointerSizePointerSize">
            <summary>Sets the shim of PointerSize.op_Inequality(PointerSize left, PointerSize right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.MultiplyOpInt32PointerSize">
            <summary>Sets the shim of PointerSize.op_Multiply(Int32 scale, PointerSize value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.MultiplyOpPointerSizeInt32">
            <summary>Sets the shim of PointerSize.op_Multiply(PointerSize value, Int32 scale)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.StaticConstructor">
            <summary>Sets the shim of PointerSize.PointerSize()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.SubtractionOpPointerSizePointerSize">
            <summary>Sets the shim of PointerSize.op_Subtraction(PointerSize left, PointerSize right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.UnaryNegationOpPointerSize">
            <summary>Sets the shim of PointerSize.op_UnaryNegation(PointerSize value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimPointerSize.UnaryPlusOpPointerSize">
            <summary>Sets the shim of PointerSize.op_UnaryPlus(PointerSize value)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimResult">
            <summary>Shim type of SharpDX.Result</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResult.EqualityOpResultResult">
            <summary>Sets the shim of Result.op_Equality(Result left, Result right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResult.ExplicitOpResultInt32">
            <summary>Sets the shim of Result.op_Explicit(Result result)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResult.ExplicitOpResultUInt32">
            <summary>Sets the shim of Result.op_Explicit(Result result)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResult.GetResultFromExceptionException">
            <summary>Sets the shim of Result.GetResultFromException(Exception ex)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResult.GetResultFromWin32ErrorInt32">
            <summary>Sets the shim of Result.GetResultFromWin32Error(Int32 win32Error)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResult.ImplicitOpInt32Result">
            <summary>Sets the shim of Result.op_Implicit(Int32 result)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResult.ImplicitOpUInt32Result">
            <summary>Sets the shim of Result.op_Implicit(UInt32 result)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResult.InequalityOpResultResult">
            <summary>Sets the shim of Result.op_Inequality(Result left, Result right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResult.StaticConstructor">
            <summary>Sets the shim of Result.Result()</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimResultDescriptor">
            <summary>Shim type of SharpDX.ResultDescriptor</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimResultDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimResultDescriptor.#ctor(SharpDX.ResultDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AddDescriptorsFromTypeType">
            <summary>Sets the shim of ResultDescriptor.AddDescriptorsFromType(Type type)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimResultDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.ApiCodeGet">
            <summary>Sets the shim of ResultDescriptor.get_ApiCode()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.ApiCodeSetString">
            <summary>Sets the shim of ResultDescriptor.set_ApiCode(String value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.CodeGet">
            <summary>Sets the shim of ResultDescriptor.get_Code()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.DescriptionGet">
            <summary>Sets the shim of ResultDescriptor.get_Description()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.DescriptionSetString">
            <summary>Sets the shim of ResultDescriptor.set_Description(String value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.EqualsObject">
            <summary>Sets the shim of ResultDescriptor.Equals(Object obj)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.EqualsResultDescriptor">
            <summary>Sets the shim of ResultDescriptor.Equals(ResultDescriptor other)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.GetHashCode01">
            <summary>Sets the shim of ResultDescriptor.GetHashCode()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.ModuleGet">
            <summary>Sets the shim of ResultDescriptor.get_Module()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.ModuleSetString">
            <summary>Sets the shim of ResultDescriptor.set_Module(String value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.NativeApiCodeGet">
            <summary>Sets the shim of ResultDescriptor.get_NativeApiCode()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.NativeApiCodeSetString">
            <summary>Sets the shim of ResultDescriptor.set_NativeApiCode(String value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.ResultGet">
            <summary>Sets the shim of ResultDescriptor.get_Result()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.ResultSetResult">
            <summary>Sets the shim of ResultDescriptor.set_Result(Result value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.AllInstances.ToString01">
            <summary>Sets the shim of ResultDescriptor.ToString()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.ApiCodeGet">
            <summary>Sets the shim of ResultDescriptor.get_ApiCode()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.ApiCodeSetString">
            <summary>Sets the shim of ResultDescriptor.set_ApiCode(String value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimResultDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimResultDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.CodeGet">
            <summary>Sets the shim of ResultDescriptor.get_Code()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.ConstructorResultStringStringStringString">
            <summary>Sets the shim of ResultDescriptor.ResultDescriptor(Result code, String module, String nativeApiCode, String apiCode, String description)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.DescriptionGet">
            <summary>Sets the shim of ResultDescriptor.get_Description()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.DescriptionSetString">
            <summary>Sets the shim of ResultDescriptor.set_Description(String value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.EqualityOpResultDescriptorResult">
            <summary>Sets the shim of ResultDescriptor.op_Equality(ResultDescriptor left, Result right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.EqualsObject">
            <summary>Sets the shim of ResultDescriptor.Equals(Object obj)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.EqualsResultDescriptor">
            <summary>Sets the shim of ResultDescriptor.Equals(ResultDescriptor other)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.ExplicitOpResultDescriptorInt32">
            <summary>Sets the shim of ResultDescriptor.op_Explicit(ResultDescriptor result)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.ExplicitOpResultDescriptorUInt32">
            <summary>Sets the shim of ResultDescriptor.op_Explicit(ResultDescriptor result)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.FindResult">
            <summary>Sets the shim of ResultDescriptor.Find(Result result)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.GetDescriptionFromResultCodeInt32">
            <summary>Sets the shim of ResultDescriptor.GetDescriptionFromResultCode(Int32 resultCode)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.GetHashCode">
            <summary>Sets the shim of ResultDescriptor.GetHashCode()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.ImplicitOpResultDescriptorResult">
            <summary>Sets the shim of ResultDescriptor.op_Implicit(ResultDescriptor result)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.InequalityOpResultDescriptorResult">
            <summary>Sets the shim of ResultDescriptor.op_Inequality(ResultDescriptor left, Result right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.ModuleGet">
            <summary>Sets the shim of ResultDescriptor.get_Module()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.ModuleSetString">
            <summary>Sets the shim of ResultDescriptor.set_Module(String value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.NativeApiCodeGet">
            <summary>Sets the shim of ResultDescriptor.get_NativeApiCode()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.NativeApiCodeSetString">
            <summary>Sets the shim of ResultDescriptor.set_NativeApiCode(String value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.RegisterProviderType">
            <summary>Sets the shim of ResultDescriptor.RegisterProvider(Type descriptorsProviderType)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.ResultGet">
            <summary>Sets the shim of ResultDescriptor.get_Result()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.ResultSetResult">
            <summary>Sets the shim of ResultDescriptor.set_Result(Result value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.StaticConstructor">
            <summary>Sets the shim of ResultDescriptor.ResultDescriptor()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimResultDescriptor.ToString">
            <summary>Sets the shim of ResultDescriptor.ToString()</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimServiceEventArgs">
            <summary>Shim type of SharpDX.ServiceEventArgs</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimServiceEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimServiceEventArgs.#ctor(SharpDX.ServiceEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimServiceEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimServiceEventArgs.AllInstances.InstanceGet">
            <summary>Sets the shim of ServiceEventArgs.get_Instance()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimServiceEventArgs.AllInstances.InstanceSetObject">
            <summary>Sets the shim of ServiceEventArgs.set_Instance(Object value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimServiceEventArgs.AllInstances.ServiceTypeGet">
            <summary>Sets the shim of ServiceEventArgs.get_ServiceType()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimServiceEventArgs.AllInstances.ServiceTypeSetType">
            <summary>Sets the shim of ServiceEventArgs.set_ServiceType(Type value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimServiceEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimServiceEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimServiceEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimServiceEventArgs.ConstructorTypeObject">
            <summary>Sets the shim of ServiceEventArgs.ServiceEventArgs(Type serviceType, Object serviceInstance)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimServiceEventArgs.InstanceGet">
            <summary>Sets the shim of ServiceEventArgs.get_Instance()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimServiceEventArgs.InstanceSetObject">
            <summary>Sets the shim of ServiceEventArgs.set_Instance(Object value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimServiceEventArgs.ServiceTypeGet">
            <summary>Sets the shim of ServiceEventArgs.get_ServiceType()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimServiceEventArgs.ServiceTypeSetType">
            <summary>Sets the shim of ServiceEventArgs.set_ServiceType(Type value)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimSharpDXException">
            <summary>Shim type of SharpDX.SharpDXException</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimSharpDXException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimSharpDXException.#ctor(SharpDX.SharpDXException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimSharpDXException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSharpDXException.AllInstances.DescriptorGet">
            <summary>Sets the shim of SharpDXException.get_Descriptor()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSharpDXException.AllInstances.ResultCodeGet">
            <summary>Sets the shim of SharpDXException.get_ResultCode()</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimSharpDXException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimSharpDXException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSharpDXException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimSharpDXException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSharpDXException.Constructor">
            <summary>Sets the shim of SharpDXException.SharpDXException()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSharpDXException.ConstructorResult">
            <summary>Sets the shim of SharpDXException.SharpDXException(Result result)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSharpDXException.ConstructorResultDescriptor">
            <summary>Sets the shim of SharpDXException.SharpDXException(ResultDescriptor descriptor)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSharpDXException.ConstructorResultString">
            <summary>Sets the shim of SharpDXException.SharpDXException(Result result, String message)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSharpDXException.ConstructorResultStringObjectArray">
            <summary>Sets the shim of SharpDXException.SharpDXException(Result result, String message, Object[] args)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSharpDXException.ConstructorStringExceptionObjectArray">
            <summary>Sets the shim of SharpDXException.SharpDXException(String message, Exception innerException, Object[] args)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSharpDXException.ConstructorStringObjectArray">
            <summary>Sets the shim of SharpDXException.SharpDXException(String message, Object[] args)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSharpDXException.DescriptorGet">
            <summary>Sets the shim of SharpDXException.get_Descriptor()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSharpDXException.ResultCodeGet">
            <summary>Sets the shim of SharpDXException.get_ResultCode()</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimSize2">
            <summary>Shim type of SharpDX.Size2</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimSize2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimSize2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimSize2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimSize2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSize2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSize2.EqualityOpSize2Size2">
            <summary>Sets the shim of Size2.op_Equality(Size2 left, Size2 right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSize2.InequalityOpSize2Size2">
            <summary>Sets the shim of Size2.op_Inequality(Size2 left, Size2 right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSize2.StaticConstructor">
            <summary>Sets the shim of Size2.Size2()</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimSize2F">
            <summary>Shim type of SharpDX.Size2F</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimSize2F.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimSize2F.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimSize2F.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimSize2F.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSize2F.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSize2F.EqualityOpSize2FSize2F">
            <summary>Sets the shim of Size2F.op_Equality(Size2F left, Size2F right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSize2F.InequalityOpSize2FSize2F">
            <summary>Sets the shim of Size2F.op_Inequality(Size2F left, Size2F right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimSize2F.StaticConstructor">
            <summary>Sets the shim of Size2F.Size2F()</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimTagAttribute">
            <summary>Shim type of SharpDX.TagAttribute</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimTagAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimTagAttribute.#ctor(SharpDX.TagAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimTagAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimTagAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of TagAttribute.get_Value()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimTagAttribute.AllInstances.ValueSetString">
            <summary>Sets the shim of TagAttribute.set_Value(String value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimTagAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimTagAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimTagAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimTagAttribute.ConstructorString">
            <summary>Sets the shim of TagAttribute.TagAttribute(String value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimTagAttribute.ValueGet">
            <summary>Sets the shim of TagAttribute.get_Value()</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimTagAttribute.ValueSetString">
            <summary>Sets the shim of TagAttribute.set_Value(String value)</summary>
        </member>
        <member name="T:SharpDX.Fakes.ShimUtilities">
            <summary>Shim type of SharpDX.Utilities</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimUtilities.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.AllocateClearedMemoryInt32ByteInt32">
            <summary>Sets the shim of Utilities.AllocateClearedMemory(Int32 sizeInBytes, Byte clearValue, Int32 align)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.AllocateMemoryInt32Int32">
            <summary>Sets the shim of Utilities.AllocateMemory(Int32 sizeInBytes, Int32 align)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimUtilities.AnyOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of Utilities.Any(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimUtilities.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimUtilities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.BlobToStringBlob">
            <summary>Sets the shim of Utilities.BlobToString(Blob blob)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimUtilities.BuildPropertyGetterOf1TypePropertyInfo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Reflection.PropertyInfo,SharpDX.GetValueFastDelegate{``0}})">
            <summary>Sets the shim of Utilities.BuildPropertyGetter(Type customEffectType, PropertyInfo propertyInfo)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimUtilities.BuildPropertySetterOf1TypePropertyInfo``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Type,System.Reflection.PropertyInfo,SharpDX.SetValueFastDelegate{``0}})">
            <summary>Sets the shim of Utilities.BuildPropertySetter(Type customEffectType, PropertyInfo propertyInfo)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.ClearMemoryIntPtrByteInt32">
            <summary>Sets the shim of Utilities.ClearMemory(IntPtr dest, Byte value, Int32 sizeInBytesToClear)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.CompareICollectionICollection">
            <summary>Sets the shim of Utilities.Compare(ICollection left, ICollection right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.CompareIEnumerableIEnumerable">
            <summary>Sets the shim of Utilities.Compare(IEnumerable left, IEnumerable right)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.CompareIEnumeratorIEnumerator">
            <summary>Sets the shim of Utilities.Compare(IEnumerator leftIt, IEnumerator rightIt)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.CompareMemoryIntPtrIntPtrInt32">
            <summary>Sets the shim of Utilities.CompareMemory(IntPtr from, IntPtr against, Int32 sizeToCompare)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.ComputeHashFNVModifiedByteArray">
            <summary>Sets the shim of Utilities.ComputeHashFNVModified(Byte[] data)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.ConvertToBoolArrayRawBoolArray">
            <summary>Sets the shim of Utilities.ConvertToBoolArray(RawBool[] array)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.ConvertToIntArrayBooleanArray">
            <summary>Sets the shim of Utilities.ConvertToIntArray(Boolean[] array)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.CopyMemoryIntPtrIntPtrInt32">
            <summary>Sets the shim of Utilities.CopyMemory(IntPtr dest, IntPtr src, Int32 sizeInBytesToCopy)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.CopyStringToUnmanagedIntPtrString">
            <summary>Sets the shim of Utilities.CopyStringToUnmanaged(IntPtr ptr, String str)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.CreateComInstanceGuidUtilitiesCLSCTXGuidComObject">
            <summary>Sets the shim of Utilities.CreateComInstance(Guid clsid, CLSCTX clsctx, Guid riid, ComObject comObject)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimUtilities.DisposeOf1M0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefAction{``0})">
            <summary>Sets the shim of Utilities.Dispose(!!0&amp; comObject)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimUtilities.DistinctOf1IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Utilities.Distinct(IEnumerable`1&lt;!!0&gt; source, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.FindExplicitConverstionTypeType">
            <summary>Sets the shim of Utilities.FindExplicitConverstion(Type sourceType, Type targetType)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.FreeMemoryIntPtr">
            <summary>Sets the shim of Utilities.FreeMemory(IntPtr alignedBuffer)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimUtilities.GetCustomAttributeOf1MemberInfoBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.MemberInfo,System.Boolean,``0})">
            <summary>Sets the shim of Utilities.GetCustomAttribute(MemberInfo memberInfo, Boolean inherited)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimUtilities.GetCustomAttributesOf1MemberInfoBoolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.MemberInfo,System.Boolean,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Utilities.GetCustomAttributes(MemberInfo memberInfo, Boolean inherited)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.GetGuidFromTypeType">
            <summary>Sets the shim of Utilities.GetGuidFromType(Type type)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.GetIUnknownForObjectObject">
            <summary>Sets the shim of Utilities.GetIUnknownForObject(Object obj)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.GetMethodTypeStringTypeArray">
            <summary>Sets the shim of Utilities.GetMethod(Type type, String name, Type[] typeArgs)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.GetObjectForIUnknownIntPtr">
            <summary>Sets the shim of Utilities.GetObjectForIUnknown(IntPtr iunknownPtr)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.GetProcAddressIntPtrString">
            <summary>Sets the shim of Utilities.GetProcAddress(IntPtr handle, String dllFunctionToImport)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.IntPtrAddIntPtrInt32">
            <summary>Sets the shim of Utilities.IntPtrAdd(IntPtr ptr, Int32 offset)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.IsAssignableFromTypeType">
            <summary>Sets the shim of Utilities.IsAssignableFrom(Type toType, Type fromType)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.IsAssignableToGenericTypeTypeType">
            <summary>Sets the shim of Utilities.IsAssignableToGenericType(Type givenType, Type genericType)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.IsEnumType">
            <summary>Sets the shim of Utilities.IsEnum(Type typeToTest)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.IsMemoryAlignedIntPtrInt32">
            <summary>Sets the shim of Utilities.IsMemoryAligned(IntPtr memoryPtr, Int32 align)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.IsTypeInheritFromTypeString">
            <summary>Sets the shim of Utilities.IsTypeInheritFrom(Type type, String parentType)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.IsValueTypeType">
            <summary>Sets the shim of Utilities.IsValueType(Type typeToTest)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimUtilities.JoinOf1StringM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0[],System.String})">
            <summary>Sets the shim of Utilities.Join(String separator, !!0[] array)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.JoinStringIEnumerable">
            <summary>Sets the shim of Utilities.Join(String separator, IEnumerable elements)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.JoinStringIEnumerator">
            <summary>Sets the shim of Utilities.Join(String separator, IEnumerator elements)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.PtrToStringAnsiIntPtrInt32">
            <summary>Sets the shim of Utilities.PtrToStringAnsi(IntPtr pointer, Int32 maxLength)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.PtrToStringUniIntPtrInt32">
            <summary>Sets the shim of Utilities.PtrToStringUni(IntPtr pointer, Int32 maxLength)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.ReadStreamStream">
            <summary>Sets the shim of Utilities.ReadStream(Stream stream)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.ReadStreamStreamInt32Ref">
            <summary>Sets the shim of Utilities.ReadStream(Stream stream, Int32&amp; readLength)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimUtilities.SelectManyOf2IEnumerableOfM0FuncOfM0IEnumerableOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Collections.Generic.IEnumerable{``1}})">
            <summary>Sets the shim of Utilities.SelectMany(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,IEnumerable`1&lt;!!1&gt;&gt; selector)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.StringToCoTaskMemUniString">
            <summary>Sets the shim of Utilities.StringToCoTaskMemUni(String s)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.StringToHGlobalAnsiString">
            <summary>Sets the shim of Utilities.StringToHGlobalAnsi(String s)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.StringToHGlobalUniString">
            <summary>Sets the shim of Utilities.StringToHGlobalUni(String s)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimUtilities.SwapOf1M0RefM0Ref``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.RefRefAction{``0,``0})">
            <summary>Sets the shim of Utilities.Swap(!!0&amp; left, !!0&amp; right)</summary>
        </member>
        <member name="M:SharpDX.Fakes.ShimUtilities.ToArrayOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0[]})">
            <summary>Sets the shim of Utilities.ToArray(IEnumerable`1&lt;!!0&gt; source)</summary>
        </member>
        <member name="P:SharpDX.Fakes.ShimUtilities.TryCreateComInstanceGuidUtilitiesCLSCTXGuidComObject">
            <summary>Sets the shim of Utilities.TryCreateComInstance(Guid clsid, CLSCTX clsctx, Guid riid, ComObject comObject)</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubCallbackBase">
            <summary>Stub type of SharpDX.CallbackBase</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCallbackBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCallbackBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCallbackBase.Dispose(System.Boolean)">
            <summary>Sets the stub of CallbackBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCallbackBase.DisposeBoolean">
            <summary>Sets the stub of CallbackBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCallbackBase.InitializeStub">
            <summary>Initializes a new instance of type StubCallbackBase</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCallbackBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCallbackBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubComArray">
            <summary>Stub type of SharpDX.ComArray</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComArray.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComArray.#ctor(SharpDX.ComObject[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubComArray.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComArray.Dispose(System.Boolean)">
            <summary>Sets the stub of ComArray.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubComArray.DisposeBoolean">
            <summary>Sets the stub of ComArray.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComArray.InitializeStub">
            <summary>Initializes a new instance of type StubComArray</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubComArray.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubComArray.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubComArray`1">
            <summary>Stub type of SharpDX.ComArray`1</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComArray`1.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComArray`1.#ctor(`0[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubComArray`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComArray`1.Dispose(System.Boolean)">
            <summary>Sets the stub of ComArray.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubComArray`1.DisposeBoolean">
            <summary>Sets the stub of ComArray.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComArray`1.InitializeStub">
            <summary>Initializes a new instance of type StubComArray</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubComArray`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubComArray`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubComObject">
            <summary>Stub type of SharpDX.ComObject</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComObject.#ctor(System.IntPtr)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComObject.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubComObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComObject.Dispose(System.Boolean)">
            <summary>Sets the stub of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubComObject.DisposeBoolean">
            <summary>Sets the stub of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComObject.InitializeStub">
            <summary>Initializes a new instance of type StubComObject</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubComObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubComObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComObject.NativePointerUpdated(System.IntPtr)">
            <summary>Sets the stub of ComObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubComObject.NativePointerUpdatedIntPtr">
            <summary>Sets the stub of ComObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComObject.NativePointerUpdating">
            <summary>Sets the stub of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubComObject.NativePointerUpdating01">
            <summary>Sets the stub of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubComObjectCallback">
            <summary>Stub type of SharpDX.ComObjectCallback</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComObjectCallback.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComObjectCallback.#ctor(System.IntPtr)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubComObjectCallback.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComObjectCallback.Dispose(System.Boolean)">
            <summary>Sets the stub of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubComObjectCallback.DisposeBoolean">
            <summary>Sets the stub of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComObjectCallback.InitializeStub">
            <summary>Initializes a new instance of type StubComObjectCallback</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubComObjectCallback.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubComObjectCallback.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComObjectCallback.NativePointerUpdated(System.IntPtr)">
            <summary>Sets the stub of ComObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubComObjectCallback.NativePointerUpdatedIntPtr">
            <summary>Sets the stub of ComObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubComObjectCallback.NativePointerUpdating">
            <summary>Sets the stub of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubComObjectCallback.NativePointerUpdating01">
            <summary>Sets the stub of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubCompilationException">
            <summary>Stub type of SharpDX.CompilationException</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCompilationException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCompilationException.#ctor(SharpDX.Result,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCompilationException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubCompilationException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCompilationException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubCompilationException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCompilationException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCompilationException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCompilationException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCompilationException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCompilationException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCompilationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCompilationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCompilationException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCompilationException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCompilationException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCompilationException.InitializeStub">
            <summary>Initializes a new instance of type StubCompilationException</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCompilationException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCompilationException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCompilationException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCompilationException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCompilationException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCompilationException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCompilationException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCompilationException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCompilationException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCompilationException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCompilationException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubCompilationResultBase`1">
            <summary>Stub type of SharpDX.CompilationResultBase`1</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCompilationResultBase`1.#ctor(`0,SharpDX.Result,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCompilationResultBase`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCompilationResultBase`1.Dispose(System.Boolean)">
            <summary>Sets the stub of CompilationResultBase`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCompilationResultBase`1.DisposeBoolean">
            <summary>Sets the stub of CompilationResultBase`1.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCompilationResultBase`1.InitializeStub">
            <summary>Initializes a new instance of type StubCompilationResultBase</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCompilationResultBase`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCompilationResultBase`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubCppObject">
            <summary>Stub type of SharpDX.CppObject</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCppObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCppObject.#ctor(System.IntPtr)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCppObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCppObject.Dispose(System.Boolean)">
            <summary>Sets the stub of CppObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCppObject.DisposeBoolean">
            <summary>Sets the stub of CppObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCppObject.InitializeStub">
            <summary>Initializes a new instance of type StubCppObject</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCppObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubCppObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCppObject.NativePointerUpdated(System.IntPtr)">
            <summary>Sets the stub of CppObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCppObject.NativePointerUpdatedIntPtr">
            <summary>Sets the stub of CppObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubCppObject.NativePointerUpdating">
            <summary>Sets the stub of CppObject.NativePointerUpdating()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubCppObject.NativePointerUpdating01">
            <summary>Sets the stub of CppObject.NativePointerUpdating()</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubDataBuffer">
            <summary>Stub type of SharpDX.DataBuffer</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataBuffer.#ctor(SharpDX.DataPointer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataBuffer.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataBuffer.#ctor(System.IntPtr,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDataBuffer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataBuffer.Dispose(System.Boolean)">
            <summary>Sets the stub of DataBuffer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataBuffer.DisposeBoolean">
            <summary>Sets the stub of DataBuffer.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataBuffer.InitializeStub">
            <summary>Initializes a new instance of type StubDataBuffer</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDataBuffer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDataBuffer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubDataStream">
            <summary>Stub type of SharpDX.DataStream</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.#ctor(SharpDX.DataPointer)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.#ctor(SharpDX.Direct3D.Blob)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.#ctor(System.Int32,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.#ctor(System.IntPtr,System.Int64,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubDataStream.Position as a property with a backing field.</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubDataStream.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubDataStream.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDataStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDataStream.CanRead">
            <summary>Sets the stub of DataStream.get_CanRead()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.CanReadGet">
            <summary>Sets the stub of DataStream.get_CanRead()</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDataStream.CanSeek">
            <summary>Sets the stub of DataStream.get_CanSeek()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.CanSeekGet">
            <summary>Sets the stub of DataStream.get_CanSeek()</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDataStream.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDataStream.CanWrite">
            <summary>Sets the stub of DataStream.get_CanWrite()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.CanWriteGet">
            <summary>Sets the stub of DataStream.get_CanWrite()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.Dispose(System.Boolean)">
            <summary>Sets the stub of DataStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.DisposeBoolean">
            <summary>Sets the stub of DataStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.Flush">
            <summary>Sets the stub of DataStream.Flush()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.Flush01">
            <summary>Sets the stub of DataStream.Flush()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.InitializeStub">
            <summary>Initializes a new instance of type StubDataStream</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDataStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDataStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDataStream.Length">
            <summary>Sets the stub of DataStream.get_Length()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.LengthGet">
            <summary>Sets the stub of DataStream.get_Length()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDataStream.Position">
            <summary>Sets the stub of DataStream.get_Position()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.PositionGet">
            <summary>Sets the stub of DataStream.get_Position()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.PositionSetInt64">
            <summary>Sets the stub of DataStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of DataStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.ReadByte">
            <summary>Sets the stub of DataStream.ReadByte()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.ReadByte01">
            <summary>Sets the stub of DataStream.ReadByte()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.ReadByteArrayInt32Int32">
            <summary>Sets the stub of DataStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDataStream.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of DataStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.SeekInt64SeekOrigin">
            <summary>Sets the stub of DataStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.SetLength(System.Int64)">
            <summary>Sets the stub of DataStream.SetLength(Int64 value)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.SetLengthInt64">
            <summary>Sets the stub of DataStream.SetLength(Int64 value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of DataStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDataStream.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.WriteByteArrayInt32Int32">
            <summary>Sets the stub of DataStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDataStream.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDataStream.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubDisposeBase">
            <summary>Stub type of SharpDX.DisposeBase</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDisposeBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDisposeBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDisposeBase.Dispose(System.Boolean)">
            <summary>Sets the stub of DisposeBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDisposeBase.DisposeBoolean">
            <summary>Sets the stub of DisposeBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDisposeBase.InitializeStub">
            <summary>Initializes a new instance of type StubDisposeBase</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDisposeBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDisposeBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubDisposeCollector">
            <summary>Stub type of SharpDX.DisposeCollector</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDisposeCollector.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDisposeCollector.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDisposeCollector.Dispose(System.Boolean)">
            <summary>Sets the stub of DisposeCollector.Dispose(Boolean disposeManagedResources)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubDisposeCollector.DisposeBoolean">
            <summary>Sets the stub of DisposeCollector.Dispose(Boolean disposeManagedResources)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubDisposeCollector.InitializeStub">
            <summary>Initializes a new instance of type StubDisposeCollector</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDisposeCollector.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubDisposeCollector.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubICallbackable">
            <summary>Stub type of SharpDX.ICallbackable</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubICallbackable.#ctor">
            <summary>Initializes a new instance of type StubICallbackable</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubICallbackable.AttachBackingFieldToShadow">
            <summary>Attaches delegates to emulate StubICallbackable.Shadow as a property with a backing field.</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubICallbackable.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubICallbackable.SharpDX#ICallbackable#Shadow">
            <summary>Sets the stub of ICallbackable.get_Shadow()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubICallbackable.ShadowGet">
            <summary>Sets the stub of ICallbackable.get_Shadow()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubICallbackable.ShadowSetIDisposable">
            <summary>Sets the stub of ICallbackable.set_Shadow(IDisposable value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubICallbackable.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubIInspectable">
            <summary>Stub type of SharpDX.IInspectable</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubIInspectable.#ctor">
            <summary>Initializes a new instance of type StubIInspectable</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubIInspectable.AttachBackingFieldToShadow">
            <summary>Attaches delegates to emulate StubIInspectable.Shadow as a property with a backing field.</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubIInspectable.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubIInspectable.SharpDX#ICallbackable#Shadow">
            <summary>Sets the stub of ICallbackable.get_Shadow()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubIInspectable.ShadowGet">
            <summary>Sets the stub of ICallbackable.get_Shadow()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubIInspectable.ShadowSetIDisposable">
            <summary>Sets the stub of ICallbackable.set_Shadow(IDisposable value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubIInspectable.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubIUnknown">
            <summary>Stub type of SharpDX.IUnknown</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubIUnknown.#ctor">
            <summary>Initializes a new instance of type StubIUnknown</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubIUnknown.AddReference">
            <summary>Sets the stub of IUnknown.AddReference()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubIUnknown.QueryInterfaceGuidRefIntPtrOut">
            <summary>Sets the stub of IUnknown.QueryInterface(Guid&amp; guid, IntPtr&amp; comObject)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubIUnknown.Release">
            <summary>Sets the stub of IUnknown.Release()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubIUnknown.SharpDX#IUnknown#AddReference">
            <summary>Sets the stub of IUnknown.AddReference()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubIUnknown.SharpDX#IUnknown#QueryInterface(System.Guid@,System.IntPtr@)">
            <summary>Sets the stub of IUnknown.QueryInterface(Guid&amp; guid, IntPtr&amp; comObject)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubIUnknown.SharpDX#IUnknown#Release">
            <summary>Sets the stub of IUnknown.Release()</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubServiceEventArgs">
            <summary>Stub type of SharpDX.ServiceEventArgs</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubServiceEventArgs.#ctor(System.Type,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubServiceEventArgs.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubServiceEventArgs.InitializeStub">
            <summary>Initializes a new instance of type StubServiceEventArgs</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubServiceEventArgs.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubServiceEventArgs.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubSharpDXException">
            <summary>Stub type of SharpDX.SharpDXException</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubSharpDXException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubSharpDXException.#ctor(SharpDX.ResultDescriptor)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubSharpDXException.#ctor(SharpDX.Result)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubSharpDXException.#ctor(System.String,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubSharpDXException.#ctor(SharpDX.Result,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubSharpDXException.#ctor(SharpDX.Result,System.String,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubSharpDXException.#ctor(System.String,System.Exception,System.Object[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubSharpDXException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSharpDXException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubSharpDXException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSharpDXException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubSharpDXException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubSharpDXException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubSharpDXException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubSharpDXException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubSharpDXException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubSharpDXException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubSharpDXException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubSharpDXException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubSharpDXException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubSharpDXException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubSharpDXException.InitializeStub">
            <summary>Initializes a new instance of type StubSharpDXException</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubSharpDXException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubSharpDXException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubSharpDXException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubSharpDXException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubSharpDXException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubSharpDXException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubSharpDXException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubSharpDXException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubSharpDXException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubSharpDXException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubSharpDXException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:SharpDX.Fakes.StubTagAttribute">
            <summary>Stub type of SharpDX.TagAttribute</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubTagAttribute.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubTagAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubTagAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubTagAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubTagAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubTagAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubTagAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTagAttribute</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubTagAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubTagAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubTagAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubTagAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:SharpDX.Fakes.StubTagAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubTagAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="P:SharpDX.Fakes.StubTagAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="F:SharpDX.Fakes.StubTagAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:SharpDX.IO.Fakes.ShimNativeFile">
            <summary>Shim type of SharpDX.IO.NativeFile</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.ShimNativeFile.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.ShimNativeFile.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.ShimNativeFile.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFile.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFile.ExistsString">
            <summary>Sets the shim of NativeFile.Exists(String filePath)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFile.GetLastWriteTimeString">
            <summary>Sets the shim of NativeFile.GetLastWriteTime(String path)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFile.ReadAllBytesString">
            <summary>Sets the shim of NativeFile.ReadAllBytes(String path)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFile.ReadAllTextString">
            <summary>Sets the shim of NativeFile.ReadAllText(String path)</summary>
        </member>
        <member name="T:SharpDX.IO.Fakes.ShimNativeFileStream">
            <summary>Shim type of SharpDX.IO.NativeFileStream</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.ShimNativeFileStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.ShimNativeFileStream.#ctor(SharpDX.IO.NativeFileStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.CanReadGet">
            <summary>Sets the shim of NativeFileStream.get_CanRead()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.CanSeekGet">
            <summary>Sets the shim of NativeFileStream.get_CanSeek()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.CanWriteGet">
            <summary>Sets the shim of NativeFileStream.get_CanWrite()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of NativeFileStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.Flush">
            <summary>Sets the shim of NativeFileStream.Flush()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.HandleGet">
            <summary>Sets the shim of NativeFileStream.get_Handle()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.LengthGet">
            <summary>Sets the shim of NativeFileStream.get_Length()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.PositionGet">
            <summary>Sets the shim of NativeFileStream.get_Position()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of NativeFileStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of NativeFileStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.ReadIntPtrInt32Int32">
            <summary>Sets the shim of NativeFileStream.Read(IntPtr buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of NativeFileStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.SetLengthInt64">
            <summary>Sets the shim of NativeFileStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of NativeFileStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.AllInstances.WriteIntPtrInt32Int32">
            <summary>Sets the shim of NativeFileStream.Write(IntPtr buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.ShimNativeFileStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.ShimNativeFileStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.ShimNativeFileStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.CanReadGet">
            <summary>Sets the shim of NativeFileStream.get_CanRead()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.CanSeekGet">
            <summary>Sets the shim of NativeFileStream.get_CanSeek()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.CanWriteGet">
            <summary>Sets the shim of NativeFileStream.get_CanWrite()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.ConstructorStringNativeFileModeNativeFileAccessNativeFileShare">
            <summary>Sets the shim of NativeFileStream.NativeFileStream(String fileName, NativeFileMode fileMode, NativeFileAccess access, NativeFileShare share)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.DisposeBoolean">
            <summary>Sets the shim of NativeFileStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.Flush">
            <summary>Sets the shim of NativeFileStream.Flush()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.HandleGet">
            <summary>Sets the shim of NativeFileStream.get_Handle()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.LengthGet">
            <summary>Sets the shim of NativeFileStream.get_Length()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.MarshalGetLastWin32Error">
            <summary>Sets the shim of NativeFileStream.MarshalGetLastWin32Error()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.PositionGet">
            <summary>Sets the shim of NativeFileStream.get_Position()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.PositionSetInt64">
            <summary>Sets the shim of NativeFileStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of NativeFileStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.ReadIntPtrInt32Int32">
            <summary>Sets the shim of NativeFileStream.Read(IntPtr buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.SeekInt64SeekOrigin">
            <summary>Sets the shim of NativeFileStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.SetLengthInt64">
            <summary>Sets the shim of NativeFileStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.WriteByteArrayInt32Int32">
            <summary>Sets the shim of NativeFileStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.ShimNativeFileStream.WriteIntPtrInt32Int32">
            <summary>Sets the shim of NativeFileStream.Write(IntPtr buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:SharpDX.IO.Fakes.StubNativeFileStream">
            <summary>Stub type of SharpDX.IO.NativeFileStream</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.#ctor(System.String,SharpDX.IO.NativeFileMode,SharpDX.IO.NativeFileAccess,SharpDX.IO.NativeFileShare)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubNativeFileStream.Position as a property with a backing field.</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubNativeFileStream.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubNativeFileStream.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.StubNativeFileStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.StubNativeFileStream.CanRead">
            <summary>Sets the stub of NativeFileStream.get_CanRead()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.CanReadGet">
            <summary>Sets the stub of NativeFileStream.get_CanRead()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.StubNativeFileStream.CanSeek">
            <summary>Sets the stub of NativeFileStream.get_CanSeek()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.CanSeekGet">
            <summary>Sets the stub of NativeFileStream.get_CanSeek()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.StubNativeFileStream.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.StubNativeFileStream.CanWrite">
            <summary>Sets the stub of NativeFileStream.get_CanWrite()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.CanWriteGet">
            <summary>Sets the stub of NativeFileStream.get_CanWrite()</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.Dispose(System.Boolean)">
            <summary>Sets the stub of NativeFileStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.DisposeBoolean">
            <summary>Sets the stub of NativeFileStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.Flush">
            <summary>Sets the stub of NativeFileStream.Flush()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.Flush01">
            <summary>Sets the stub of NativeFileStream.Flush()</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.InitializeStub">
            <summary>Initializes a new instance of type StubNativeFileStream</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.StubNativeFileStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.StubNativeFileStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.StubNativeFileStream.Length">
            <summary>Sets the stub of NativeFileStream.get_Length()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.LengthGet">
            <summary>Sets the stub of NativeFileStream.get_Length()</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.StubNativeFileStream.Position">
            <summary>Sets the stub of NativeFileStream.get_Position()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.PositionGet">
            <summary>Sets the stub of NativeFileStream.get_Position()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.PositionSetInt64">
            <summary>Sets the stub of NativeFileStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of NativeFileStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.ReadByteArrayInt32Int32">
            <summary>Sets the stub of NativeFileStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.StubNativeFileStream.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of NativeFileStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.SeekInt64SeekOrigin">
            <summary>Sets the stub of NativeFileStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.SetLength(System.Int64)">
            <summary>Sets the stub of NativeFileStream.SetLength(Int64 value)</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.SetLengthInt64">
            <summary>Sets the stub of NativeFileStream.SetLength(Int64 value)</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of NativeFileStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:SharpDX.IO.Fakes.StubNativeFileStream.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.WriteByteArrayInt32Int32">
            <summary>Sets the stub of NativeFileStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:SharpDX.IO.Fakes.StubNativeFileStream.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:SharpDX.IO.Fakes.StubNativeFileStream.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawBool">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawBool</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawBool.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawBool.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawBool.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawBool.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawBool.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawBool.EqualityOpRawBoolRawBool">
            <summary>Sets the shim of RawBool.op_Equality(RawBool left, RawBool right)</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawBool.ImplicitOpBooleanRawBool">
            <summary>Sets the shim of RawBool.op_Implicit(Boolean boolValue)</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawBool.ImplicitOpRawBoolBoolean">
            <summary>Sets the shim of RawBool.op_Implicit(RawBool booleanValue)</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawBool.InequalityOpRawBoolRawBool">
            <summary>Sets the shim of RawBool.op_Inequality(RawBool left, RawBool right)</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawBool4">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawBool4</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawBool4.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawBool4.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawBool4.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawBool4.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawBool4.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawBox">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawBox</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawBox.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawBox.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawBox.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawBox.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawBox.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawColor3">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawColor3</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawColor3.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawColor3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawColor3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawColor3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawColor3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawColor4">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawColor4</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawColor4.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawColor4.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawColor4.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawColor4.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawColor4.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawColorBGRA">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawColorBGRA</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawColorBGRA.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawColorBGRA.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawColorBGRA.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawColorBGRA.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawColorBGRA.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawInt3">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawInt3</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawInt3.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawInt3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawInt3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawInt3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawInt3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawInt4">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawInt4</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawInt4.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawInt4.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawInt4.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawInt4.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawInt4.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawMatrix</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix3x2">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawMatrix3x2</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix3x2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix3x2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix3x2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix3x2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix3x2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix4x3">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawMatrix4x3</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix4x3.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix4x3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix4x3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix4x3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix4x3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix5x4">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawMatrix5x4</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix5x4.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix5x4.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix5x4.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix5x4.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawMatrix5x4.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawPlane">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawPlane</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawPlane.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawPlane.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawPlane.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawPlane.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawPlane.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawPoint">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawPoint</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawPoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawPoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawPoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawPoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawPoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawQuaternion">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawQuaternion</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawQuaternion.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawQuaternion.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawQuaternion.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawQuaternion.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawQuaternion.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawRectangle">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawRectangle</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawRectangle.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawRectangle.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawRectangle.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawRectangle.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawRectangle.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawRectangleF">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawRectangleF</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawRectangleF.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawRectangleF.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawRectangleF.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawRectangleF.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawRectangleF.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawVector2">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawVector2</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawVector2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawVector2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawVector2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawVector2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawVector2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawVector3">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawVector3</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawVector3.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawVector3.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawVector3.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawVector3.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawVector3.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawVector4">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawVector4</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawVector4.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawVector4.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawVector4.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawVector4.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawVector4.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawViewport">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawViewport</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawViewport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawViewport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawViewport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawViewport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawViewport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawViewportF">
            <summary>Shim type of SharpDX.Mathematics.Interop.RawViewportF</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawViewportF.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Mathematics.Interop.Fakes.ShimRawViewportF.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawViewportF.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Mathematics.Interop.Fakes.ShimRawViewportF.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Mathematics.Interop.Fakes.ShimRawViewportF.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimFourCC">
            <summary>Shim type of SharpDX.Multimedia.FourCC</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimFourCC.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimFourCC.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimFourCC.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimFourCC.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimFourCC.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimFourCC.EqualityOpFourCCFourCC">
            <summary>Sets the shim of FourCC.op_Equality(FourCC left, FourCC right)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimFourCC.ImplicitOpFourCCInt32">
            <summary>Sets the shim of FourCC.op_Implicit(FourCC d)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimFourCC.ImplicitOpFourCCString">
            <summary>Sets the shim of FourCC.op_Implicit(FourCC d)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimFourCC.ImplicitOpFourCCUInt32">
            <summary>Sets the shim of FourCC.op_Implicit(FourCC d)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimFourCC.ImplicitOpInt32FourCC">
            <summary>Sets the shim of FourCC.op_Implicit(Int32 d)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimFourCC.ImplicitOpStringFourCC">
            <summary>Sets the shim of FourCC.op_Implicit(String d)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimFourCC.ImplicitOpUInt32FourCC">
            <summary>Sets the shim of FourCC.op_Implicit(UInt32 d)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimFourCC.InequalityOpFourCCFourCC">
            <summary>Sets the shim of FourCC.op_Inequality(FourCC left, FourCC right)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimFourCC.StaticConstructor">
            <summary>Sets the shim of FourCC.FourCC()</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimRiffChunk">
            <summary>Shim type of SharpDX.Multimedia.RiffChunk</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimRiffChunk.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimRiffChunk.#ctor(SharpDX.Multimedia.RiffChunk)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances.DataPositionGet">
            <summary>Sets the shim of RiffChunk.get_DataPosition()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances.DataPositionSetUInt32">
            <summary>Sets the shim of RiffChunk.set_DataPosition(UInt32 value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances.GetData">
            <summary>Sets the shim of RiffChunk.GetData()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances.IsHeaderGet">
            <summary>Sets the shim of RiffChunk.get_IsHeader()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances.IsHeaderSetBoolean">
            <summary>Sets the shim of RiffChunk.set_IsHeader(Boolean value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances.IsListGet">
            <summary>Sets the shim of RiffChunk.get_IsList()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances.IsListSetBoolean">
            <summary>Sets the shim of RiffChunk.set_IsList(Boolean value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances.SizeGet">
            <summary>Sets the shim of RiffChunk.get_Size()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances.SizeSetUInt32">
            <summary>Sets the shim of RiffChunk.set_Size(UInt32 value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances.StreamGet">
            <summary>Sets the shim of RiffChunk.get_Stream()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances.StreamSetStream">
            <summary>Sets the shim of RiffChunk.set_Stream(Stream value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances.ToString01">
            <summary>Sets the shim of RiffChunk.ToString()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances.TypeGet">
            <summary>Sets the shim of RiffChunk.get_Type()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.AllInstances.TypeSetFourCC">
            <summary>Sets the shim of RiffChunk.set_Type(FourCC value)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimRiffChunk.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimRiffChunk.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.ConstructorStreamFourCCUInt32UInt32BooleanBoolean">
            <summary>Sets the shim of RiffChunk.RiffChunk(Stream stream, FourCC type, UInt32 size, UInt32 dataPosition, Boolean isList, Boolean isHeader)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.DataPositionGet">
            <summary>Sets the shim of RiffChunk.get_DataPosition()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.DataPositionSetUInt32">
            <summary>Sets the shim of RiffChunk.set_DataPosition(UInt32 value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.GetData">
            <summary>Sets the shim of RiffChunk.GetData()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.IsHeaderGet">
            <summary>Sets the shim of RiffChunk.get_IsHeader()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.IsHeaderSetBoolean">
            <summary>Sets the shim of RiffChunk.set_IsHeader(Boolean value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.IsListGet">
            <summary>Sets the shim of RiffChunk.get_IsList()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.IsListSetBoolean">
            <summary>Sets the shim of RiffChunk.set_IsList(Boolean value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.SizeGet">
            <summary>Sets the shim of RiffChunk.get_Size()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.SizeSetUInt32">
            <summary>Sets the shim of RiffChunk.set_Size(UInt32 value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.StreamGet">
            <summary>Sets the shim of RiffChunk.get_Stream()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.StreamSetStream">
            <summary>Sets the shim of RiffChunk.set_Stream(Stream value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.ToString">
            <summary>Sets the shim of RiffChunk.ToString()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.TypeGet">
            <summary>Sets the shim of RiffChunk.get_Type()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffChunk.TypeSetFourCC">
            <summary>Sets the shim of RiffChunk.set_Type(FourCC value)</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimRiffParser">
            <summary>Shim type of SharpDX.Multimedia.RiffParser</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimRiffParser.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimRiffParser.#ctor(SharpDX.Multimedia.RiffParser)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimRiffParser.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.AllInstances.Ascend">
            <summary>Sets the shim of RiffParser.Ascend()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.AllInstances.CheckState">
            <summary>Sets the shim of RiffParser.CheckState()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.AllInstances.ChunkStackGet">
            <summary>Sets the shim of RiffParser.get_ChunkStack()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.AllInstances.CurrentGet">
            <summary>Sets the shim of RiffParser.get_Current()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.AllInstances.CurrentSystemCollectionsIEnumeratorget">
            <summary>Sets the shim of RiffParser.System.Collections.IEnumerator.get_Current()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.AllInstances.Descend">
            <summary>Sets the shim of RiffParser.Descend()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.AllInstances.Dispose">
            <summary>Sets the shim of RiffParser.Dispose()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.AllInstances.GetAllChunks">
            <summary>Sets the shim of RiffParser.GetAllChunks()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.AllInstances.GetEnumerator">
            <summary>Sets the shim of RiffParser.GetEnumerator()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.AllInstances.MoveNext">
            <summary>Sets the shim of RiffParser.MoveNext()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.AllInstances.Reset">
            <summary>Sets the shim of RiffParser.Reset()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of RiffParser.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.Ascend">
            <summary>Sets the shim of RiffParser.Ascend()</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimRiffParser.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimRiffParser.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimRiffParser.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimRiffParser.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimRiffParser.Bind(System.Collections.IEnumerator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimRiffParser.Bind(System.Collections.Generic.IEnumerable{SharpDX.Multimedia.RiffChunk})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimRiffParser.Bind(System.Collections.Generic.IEnumerator{SharpDX.Multimedia.RiffChunk})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.CheckState">
            <summary>Sets the shim of RiffParser.CheckState()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.ChunkStackGet">
            <summary>Sets the shim of RiffParser.get_ChunkStack()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.ConstructorStream">
            <summary>Sets the shim of RiffParser.RiffParser(Stream input)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.CurrentGet">
            <summary>Sets the shim of RiffParser.get_Current()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.CurrentSystemCollectionsIEnumeratorget">
            <summary>Sets the shim of RiffParser.System.Collections.IEnumerator.get_Current()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.Descend">
            <summary>Sets the shim of RiffParser.Descend()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.Dispose">
            <summary>Sets the shim of RiffParser.Dispose()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.GetAllChunks">
            <summary>Sets the shim of RiffParser.GetAllChunks()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.GetEnumerator">
            <summary>Sets the shim of RiffParser.GetEnumerator()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.MoveNext">
            <summary>Sets the shim of RiffParser.MoveNext()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.Reset">
            <summary>Sets the shim of RiffParser.Reset()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimRiffParser.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of RiffParser.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimSoundStream">
            <summary>Shim type of SharpDX.Multimedia.SoundStream</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimSoundStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimSoundStream.#ctor(SharpDX.Multimedia.SoundStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.CanReadGet">
            <summary>Sets the shim of SoundStream.get_CanRead()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.CanSeekGet">
            <summary>Sets the shim of SoundStream.get_CanSeek()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.CanWriteGet">
            <summary>Sets the shim of SoundStream.get_CanWrite()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.ChunkIEnumerableOfRiffChunkString">
            <summary>Sets the shim of SoundStream.Chunk(IEnumerable`1&lt;RiffChunk&gt; chunks, String id)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.DecodedPacketsInfoGet">
            <summary>Sets the shim of SoundStream.get_DecodedPacketsInfo()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.DecodedPacketsInfoSetUInt32Array">
            <summary>Sets the shim of SoundStream.set_DecodedPacketsInfo(UInt32[] value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.DisposeBoolean">
            <summary>Sets the shim of SoundStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.FileFormatNameGet">
            <summary>Sets the shim of SoundStream.get_FileFormatName()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.FileFormatNameSetString">
            <summary>Sets the shim of SoundStream.set_FileFormatName(String value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.Flush">
            <summary>Sets the shim of SoundStream.Flush()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.FormatGet">
            <summary>Sets the shim of SoundStream.get_Format()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.FormatSetWaveFormat">
            <summary>Sets the shim of SoundStream.set_Format(WaveFormat value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.InitializeStream">
            <summary>Sets the shim of SoundStream.Initialize(Stream stream)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.LengthGet">
            <summary>Sets the shim of SoundStream.get_Length()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.PositionGet">
            <summary>Sets the shim of SoundStream.get_Position()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.PositionSetInt64">
            <summary>Sets the shim of SoundStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.ReadByteArrayInt32Int32">
            <summary>Sets the shim of SoundStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of SoundStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.SetLengthInt64">
            <summary>Sets the shim of SoundStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.ThrowInvalidFileFormatException">
            <summary>Sets the shim of SoundStream.ThrowInvalidFileFormat(Exception nestedException)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.ToDataStream">
            <summary>Sets the shim of SoundStream.ToDataStream()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.AllInstances.WriteByteArrayInt32Int32">
            <summary>Sets the shim of SoundStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimSoundStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimSoundStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimSoundStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.CanReadGet">
            <summary>Sets the shim of SoundStream.get_CanRead()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.CanSeekGet">
            <summary>Sets the shim of SoundStream.get_CanSeek()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.CanWriteGet">
            <summary>Sets the shim of SoundStream.get_CanWrite()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.ChunkIEnumerableOfRiffChunkString">
            <summary>Sets the shim of SoundStream.Chunk(IEnumerable`1&lt;RiffChunk&gt; chunks, String id)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.ConstructorStream">
            <summary>Sets the shim of SoundStream.SoundStream(Stream stream)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.DecodedPacketsInfoGet">
            <summary>Sets the shim of SoundStream.get_DecodedPacketsInfo()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.DecodedPacketsInfoSetUInt32Array">
            <summary>Sets the shim of SoundStream.set_DecodedPacketsInfo(UInt32[] value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.DisposeBoolean">
            <summary>Sets the shim of SoundStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.FileFormatNameGet">
            <summary>Sets the shim of SoundStream.get_FileFormatName()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.FileFormatNameSetString">
            <summary>Sets the shim of SoundStream.set_FileFormatName(String value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.Flush">
            <summary>Sets the shim of SoundStream.Flush()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.FormatGet">
            <summary>Sets the shim of SoundStream.get_Format()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.FormatSetWaveFormat">
            <summary>Sets the shim of SoundStream.set_Format(WaveFormat value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.ImplicitOpSoundStreamDataStream">
            <summary>Sets the shim of SoundStream.op_Implicit(SoundStream stream)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.InitializeStream">
            <summary>Sets the shim of SoundStream.Initialize(Stream stream)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.LengthGet">
            <summary>Sets the shim of SoundStream.get_Length()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.PositionGet">
            <summary>Sets the shim of SoundStream.get_Position()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.PositionSetInt64">
            <summary>Sets the shim of SoundStream.set_Position(Int64 value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.ReadByteArrayInt32Int32">
            <summary>Sets the shim of SoundStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.SeekInt64SeekOrigin">
            <summary>Sets the shim of SoundStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.SetLengthInt64">
            <summary>Sets the shim of SoundStream.SetLength(Int64 value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.ThrowInvalidFileFormatException">
            <summary>Sets the shim of SoundStream.ThrowInvalidFileFormat(Exception nestedException)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.ToDataStream">
            <summary>Sets the shim of SoundStream.ToDataStream()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSoundStream.WriteByteArrayInt32Int32">
            <summary>Sets the shim of SoundStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimSpeakersExtensions">
            <summary>Shim type of SharpDX.Multimedia.SpeakersExtensions</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimSpeakersExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimSpeakersExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimSpeakersExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSpeakersExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimSpeakersExtensions.ToChannelCountSpeakers">
            <summary>Sets the shim of SpeakersExtensions.ToChannelCount(Speakers speakers)</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimWaveFormat">
            <summary>Shim type of SharpDX.Multimedia.WaveFormat</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimWaveFormat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimWaveFormat.#ctor(SharpDX.Multimedia.WaveFormat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimWaveFormat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.AllInstances.AverageBytesPerSecondGet">
            <summary>Sets the shim of WaveFormat.get_AverageBytesPerSecond()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.AllInstances.BitsPerSampleGet">
            <summary>Sets the shim of WaveFormat.get_BitsPerSample()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.AllInstances.BlockAlignGet">
            <summary>Sets the shim of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.AllInstances.ChannelsGet">
            <summary>Sets the shim of WaveFormat.get_Channels()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.AllInstances.ConvertLatencyToByteSizeInt32">
            <summary>Sets the shim of WaveFormat.ConvertLatencyToByteSize(Int32 milliseconds)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.AllInstances.EncodingGet">
            <summary>Sets the shim of WaveFormat.get_Encoding()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.AllInstances.EqualsObject">
            <summary>Sets the shim of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.AllInstances.ExtraSizeGet">
            <summary>Sets the shim of WaveFormat.get_ExtraSize()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.AllInstances.GetHashCode01">
            <summary>Sets the shim of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.AllInstances.MarshalToPtr">
            <summary>Sets the shim of WaveFormat.MarshalToPtr()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.AllInstances.SampleRateGet">
            <summary>Sets the shim of WaveFormat.get_SampleRate()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.AllInstances.ToString01">
            <summary>Sets the shim of WaveFormat.ToString()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.AverageBytesPerSecondGet">
            <summary>Sets the shim of WaveFormat.get_AverageBytesPerSecond()</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimWaveFormat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimWaveFormat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.BitsPerSampleGet">
            <summary>Sets the shim of WaveFormat.get_BitsPerSample()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.BlockAlignGet">
            <summary>Sets the shim of WaveFormat.get_BlockAlign()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.ChannelsGet">
            <summary>Sets the shim of WaveFormat.get_Channels()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.Constructor">
            <summary>Sets the shim of WaveFormat.WaveFormat()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.ConstructorBinaryReader">
            <summary>Sets the shim of WaveFormat.WaveFormat(BinaryReader br)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.ConstructorInt32Int32">
            <summary>Sets the shim of WaveFormat.WaveFormat(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.ConstructorInt32Int32Int32">
            <summary>Sets the shim of WaveFormat.WaveFormat(Int32 rate, Int32 bits, Int32 channels)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.ConvertLatencyToByteSizeInt32">
            <summary>Sets the shim of WaveFormat.ConvertLatencyToByteSize(Int32 milliseconds)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.CreateALawFormatInt32Int32">
            <summary>Sets the shim of WaveFormat.CreateALawFormat(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.CreateCustomFormatWaveFormatEncodingInt32Int32Int32Int32Int32">
            <summary>Sets the shim of WaveFormat.CreateCustomFormat(WaveFormatEncoding tag, Int32 sampleRate, Int32 channels, Int32 averageBytesPerSecond, Int32 blockAlign, Int32 bitsPerSample)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.CreateIeeeFloatWaveFormatInt32Int32">
            <summary>Sets the shim of WaveFormat.CreateIeeeFloatWaveFormat(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.CreateMuLawFormatInt32Int32">
            <summary>Sets the shim of WaveFormat.CreateMuLawFormat(Int32 sampleRate, Int32 channels)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.EncodingGet">
            <summary>Sets the shim of WaveFormat.get_Encoding()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.EqualsObject">
            <summary>Sets the shim of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.ExtraSizeGet">
            <summary>Sets the shim of WaveFormat.get_ExtraSize()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.GetHashCode">
            <summary>Sets the shim of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.MarshalFromByteArray">
            <summary>Sets the shim of WaveFormat.MarshalFrom(Byte[] rawdata)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.MarshalFromIntPtr">
            <summary>Sets the shim of WaveFormat.MarshalFrom(IntPtr pointer)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.MarshalToPtr">
            <summary>Sets the shim of WaveFormat.MarshalToPtr()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.MarshalToPtrWaveFormat">
            <summary>Sets the shim of WaveFormat.MarshalToPtr(WaveFormat format)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.SampleRateGet">
            <summary>Sets the shim of WaveFormat.get_SampleRate()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormat.ToString">
            <summary>Sets the shim of WaveFormat.ToString()</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm">
            <summary>Shim type of SharpDX.Multimedia.WaveFormatAdpcm</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.#ctor(SharpDX.Multimedia.WaveFormatAdpcm)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.AllInstances.Coefficients1Get">
            <summary>Sets the shim of WaveFormatAdpcm.get_Coefficients1()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.AllInstances.Coefficients1SetInt16Array">
            <summary>Sets the shim of WaveFormatAdpcm.set_Coefficients1(Int16[] value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.AllInstances.Coefficients2Get">
            <summary>Sets the shim of WaveFormatAdpcm.get_Coefficients2()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.AllInstances.Coefficients2SetInt16Array">
            <summary>Sets the shim of WaveFormatAdpcm.set_Coefficients2(Int16[] value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.AllInstances.MarshalToPtr">
            <summary>Sets the shim of WaveFormatAdpcm.MarshalToPtr()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.AllInstances.SamplesPerBlockGet">
            <summary>Sets the shim of WaveFormatAdpcm.get_SamplesPerBlock()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.AllInstances.SamplesPerBlockSetUInt16">
            <summary>Sets the shim of WaveFormatAdpcm.set_SamplesPerBlock(UInt16 value)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.Coefficients1Get">
            <summary>Sets the shim of WaveFormatAdpcm.get_Coefficients1()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.Coefficients1SetInt16Array">
            <summary>Sets the shim of WaveFormatAdpcm.set_Coefficients1(Int16[] value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.Coefficients2Get">
            <summary>Sets the shim of WaveFormatAdpcm.get_Coefficients2()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.Coefficients2SetInt16Array">
            <summary>Sets the shim of WaveFormatAdpcm.set_Coefficients2(Int16[] value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.Constructor">
            <summary>Sets the shim of WaveFormatAdpcm.WaveFormatAdpcm()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.ConstructorInt32Int32Int32">
            <summary>Sets the shim of WaveFormatAdpcm.WaveFormatAdpcm(Int32 rate, Int32 channels, Int32 blockAlign)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.MarshalToPtr">
            <summary>Sets the shim of WaveFormatAdpcm.MarshalToPtr()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.SamplesPerBlockGet">
            <summary>Sets the shim of WaveFormatAdpcm.get_SamplesPerBlock()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatAdpcm.SamplesPerBlockSetUInt16">
            <summary>Sets the shim of WaveFormatAdpcm.set_SamplesPerBlock(UInt16 value)</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimWaveFormatExtensible">
            <summary>Shim type of SharpDX.Multimedia.WaveFormatExtensible</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimWaveFormatExtensible.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimWaveFormatExtensible.#ctor(SharpDX.Multimedia.WaveFormatExtensible)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.ShimWaveFormatExtensible.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatExtensible.AllInstances.MarshalToPtr">
            <summary>Sets the shim of WaveFormatExtensible.MarshalToPtr()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatExtensible.AllInstances.ToString01">
            <summary>Sets the shim of WaveFormatExtensible.ToString()</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimWaveFormatExtensible.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.ShimWaveFormatExtensible.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatExtensible.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatExtensible.Constructor">
            <summary>Sets the shim of WaveFormatExtensible.WaveFormatExtensible()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatExtensible.ConstructorInt32Int32Int32">
            <summary>Sets the shim of WaveFormatExtensible.WaveFormatExtensible(Int32 rate, Int32 bits, Int32 channels)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatExtensible.MarshalToPtr">
            <summary>Sets the shim of WaveFormatExtensible.MarshalToPtr()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.ShimWaveFormatExtensible.ToString">
            <summary>Sets the shim of WaveFormatExtensible.ToString()</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.StubRiffChunk">
            <summary>Stub type of SharpDX.Multimedia.RiffChunk</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubRiffChunk.#ctor(System.IO.Stream,SharpDX.Multimedia.FourCC,System.UInt32,System.UInt32,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubRiffChunk.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubRiffChunk.InitializeStub">
            <summary>Initializes a new instance of type StubRiffChunk</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubRiffChunk.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubRiffChunk.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubRiffChunk.ToString">
            <summary>Sets the stub of RiffChunk.ToString()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubRiffChunk.ToString01">
            <summary>Sets the stub of RiffChunk.ToString()</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.StubRiffParser">
            <summary>Stub type of SharpDX.Multimedia.RiffParser</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubRiffParser.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubRiffParser.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubRiffParser.InitializeStub">
            <summary>Initializes a new instance of type StubRiffParser</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubRiffParser.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubRiffParser.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.StubSoundStream">
            <summary>Stub type of SharpDX.Multimedia.SoundStream</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.AttachBackingFieldToPosition">
            <summary>Attaches delegates to emulate StubSoundStream.Position as a property with a backing field.</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.AttachBackingFieldToReadTimeout">
            <summary>Attaches delegates to emulate StubSoundStream.ReadTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.AttachBackingFieldToWriteTimeout">
            <summary>Attaches delegates to emulate StubSoundStream.WriteTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.BeginReadByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginRead(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.BeginWriteByteArrayInt32Int32AsyncCallbackObject">
            <summary>Sets the stub of Stream.BeginWrite(Byte[] buffer, Int32 offset, Int32 count, AsyncCallback callback, Object state)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubSoundStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubSoundStream.CanRead">
            <summary>Sets the stub of SoundStream.get_CanRead()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.CanReadGet">
            <summary>Sets the stub of SoundStream.get_CanRead()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubSoundStream.CanSeek">
            <summary>Sets the stub of SoundStream.get_CanSeek()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.CanSeekGet">
            <summary>Sets the stub of SoundStream.get_CanSeek()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubSoundStream.CanTimeout">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.CanTimeoutGet">
            <summary>Sets the stub of Stream.get_CanTimeout()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubSoundStream.CanWrite">
            <summary>Sets the stub of SoundStream.get_CanWrite()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.CanWriteGet">
            <summary>Sets the stub of SoundStream.get_CanWrite()</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.Close">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.Close01">
            <summary>Sets the stub of Stream.Close()</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.CreateWaitHandle">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.CreateWaitHandle01">
            <summary>Sets the stub of Stream.CreateWaitHandle()</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.Dispose(System.Boolean)">
            <summary>Sets the stub of SoundStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.DisposeBoolean">
            <summary>Sets the stub of SoundStream.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.EndRead(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.EndReadIAsyncResult">
            <summary>Sets the stub of Stream.EndRead(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.EndWrite(System.IAsyncResult)">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.EndWriteIAsyncResult">
            <summary>Sets the stub of Stream.EndWrite(IAsyncResult asyncResult)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.Flush">
            <summary>Sets the stub of SoundStream.Flush()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.Flush01">
            <summary>Sets the stub of SoundStream.Flush()</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.InitializeStub">
            <summary>Initializes a new instance of type StubSoundStream</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubSoundStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubSoundStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubSoundStream.Length">
            <summary>Sets the stub of SoundStream.get_Length()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.LengthGet">
            <summary>Sets the stub of SoundStream.get_Length()</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.ObjectInvariant">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.ObjectInvariant01">
            <summary>Sets the stub of Stream.ObjectInvariant()</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubSoundStream.Position">
            <summary>Sets the stub of SoundStream.get_Position()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.PositionGet">
            <summary>Sets the stub of SoundStream.get_Position()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.PositionSetInt64">
            <summary>Sets the stub of SoundStream.set_Position(Int64 value)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of SoundStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.ReadByte">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.ReadByte01">
            <summary>Sets the stub of Stream.ReadByte()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.ReadByteArrayInt32Int32">
            <summary>Sets the stub of SoundStream.Read(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubSoundStream.ReadTimeout">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.ReadTimeoutGet">
            <summary>Sets the stub of Stream.get_ReadTimeout()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.ReadTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_ReadTimeout(Int32 value)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of SoundStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.SeekInt64SeekOrigin">
            <summary>Sets the stub of SoundStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.SetLength(System.Int64)">
            <summary>Sets the stub of SoundStream.SetLength(Int64 value)</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.SetLengthInt64">
            <summary>Sets the stub of SoundStream.SetLength(Int64 value)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Sets the stub of SoundStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubSoundStream.WriteByte(System.Byte)">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.WriteByteArrayInt32Int32">
            <summary>Sets the stub of SoundStream.Write(Byte[] buffer, Int32 offset, Int32 count)</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.WriteByteByte">
            <summary>Sets the stub of Stream.WriteByte(Byte value)</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubSoundStream.WriteTimeout">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.WriteTimeoutGet">
            <summary>Sets the stub of Stream.get_WriteTimeout()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubSoundStream.WriteTimeoutSetInt32">
            <summary>Sets the stub of Stream.set_WriteTimeout(Int32 value)</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.StubWaveFormat">
            <summary>Stub type of SharpDX.Multimedia.WaveFormat</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormat.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormat.#ctor(System.IO.BinaryReader)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormat.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormat.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubWaveFormat.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormat.Equals(System.Object)">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubWaveFormat.EqualsObject">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormat.GetHashCode">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubWaveFormat.GetHashCode01">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormat.InitializeStub">
            <summary>Initializes a new instance of type StubWaveFormat</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubWaveFormat.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubWaveFormat.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormat.ToString">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubWaveFormat.ToString01">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.StubWaveFormatAdpcm">
            <summary>Stub type of SharpDX.Multimedia.WaveFormatAdpcm</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormatAdpcm.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubWaveFormatAdpcm.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormatAdpcm.Equals(System.Object)">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubWaveFormatAdpcm.EqualsObject">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormatAdpcm.GetHashCode">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubWaveFormatAdpcm.GetHashCode01">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormatAdpcm.InitializeStub">
            <summary>Initializes a new instance of type StubWaveFormatAdpcm</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubWaveFormatAdpcm.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubWaveFormatAdpcm.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormatAdpcm.ToString">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubWaveFormatAdpcm.ToString01">
            <summary>Sets the stub of WaveFormat.ToString()</summary>
        </member>
        <member name="T:SharpDX.Multimedia.Fakes.StubWaveFormatExtensible">
            <summary>Stub type of SharpDX.Multimedia.WaveFormatExtensible</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormatExtensible.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubWaveFormatExtensible.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormatExtensible.Equals(System.Object)">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubWaveFormatExtensible.EqualsObject">
            <summary>Sets the stub of WaveFormat.Equals(Object obj)</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormatExtensible.GetHashCode">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubWaveFormatExtensible.GetHashCode01">
            <summary>Sets the stub of WaveFormat.GetHashCode()</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormatExtensible.InitializeStub">
            <summary>Initializes a new instance of type StubWaveFormatExtensible</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubWaveFormatExtensible.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Multimedia.Fakes.StubWaveFormatExtensible.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SharpDX.Multimedia.Fakes.StubWaveFormatExtensible.ToString">
            <summary>Sets the stub of WaveFormatExtensible.ToString()</summary>
        </member>
        <member name="F:SharpDX.Multimedia.Fakes.StubWaveFormatExtensible.ToString01">
            <summary>Sets the stub of WaveFormatExtensible.ToString()</summary>
        </member>
        <member name="T:SharpDX.Text.Fakes.ShimASCIIEncoding">
            <summary>Shim type of SharpDX.Text.ASCIIEncoding</summary>
        </member>
        <member name="M:SharpDX.Text.Fakes.ShimASCIIEncoding.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Text.Fakes.ShimASCIIEncoding.#ctor(SharpDX.Text.ASCIIEncoding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Text.Fakes.ShimASCIIEncoding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Text.Fakes.ShimASCIIEncoding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Text.Fakes.ShimASCIIEncoding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Text.Fakes.ShimASCIIEncoding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Text.Fakes.ShimASCIIEncoding.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="T:SharpDX.Text.Fakes.ShimEncoding">
            <summary>Shim type of SharpDX.Text.Encoding</summary>
        </member>
        <member name="M:SharpDX.Text.Fakes.ShimEncoding.#ctor(SharpDX.Text.Encoding)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Text.Fakes.ShimEncoding.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Text.Fakes.ShimEncoding.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Text.Fakes.ShimEncoding.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Text.Fakes.ShimEncoding.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Text.Fakes.ShimEncoding.Bind(System.ICloneable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Text.Fakes.ShimEncoding.StaticConstructor">
            <summary>Sets the shim of Encoding.Encoding()</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimBitmapInfoHeader">
            <summary>Shim type of SharpDX.Win32.BitmapInfoHeader</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimBitmapInfoHeader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimBitmapInfoHeader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimBitmapInfoHeader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimBitmapInfoHeader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimBitmapInfoHeader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimComBaseStreamNative">
            <summary>Shim type of SharpDX.Win32.ComBaseStreamNative</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComBaseStreamNative.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComBaseStreamNative.#ctor(SharpDX.Win32.ComBaseStreamNative)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimComBaseStreamNative.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComBaseStreamNative.AllInstances.CallbackGet">
            <summary>Sets the shim of ComBaseStreamNative.get_Callback()</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComBaseStreamNative.AllInstances.CallbackSetIDisposable">
            <summary>Sets the shim of ComBaseStreamNative.set_Callback(IDisposable value)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComBaseStreamNative.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComBaseStreamNative.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComBaseStreamNative.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComBaseStreamNative.CallbackGet">
            <summary>Sets the shim of ComBaseStreamNative.get_Callback()</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComBaseStreamNative.CallbackSetIDisposable">
            <summary>Sets the shim of ComBaseStreamNative.set_Callback(IDisposable value)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComBaseStreamNative.Constructor">
            <summary>Sets the shim of ComBaseStreamNative.ComBaseStreamNative()</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimComStream">
            <summary>Shim type of SharpDX.Win32.ComStream</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStream.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStream.#ctor(SharpDX.Win32.ComStream)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimComStream.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.AllInstances.Clone">
            <summary>Sets the shim of ComStream.Clone()</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.AllInstances.CommitCommitFlags">
            <summary>Sets the shim of ComStream.Commit(CommitFlags grfCommitFlags)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.AllInstances.CopyToIStreamInt64Int64Out">
            <summary>Sets the shim of ComStream.CopyTo(IStream streamDest, Int64 numberOfBytesToCopy, Int64&amp; bytesWritten)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.AllInstances.CopyTo_IntPtrInt64Int64Out">
            <summary>Sets the shim of ComStream.CopyTo_(IntPtr stmRef, Int64 cb, Int64&amp; cbWrittenRef)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.AllInstances.GetStatisticsStorageStatisticsFlags">
            <summary>Sets the shim of ComStream.GetStatistics(StorageStatisticsFlags grfStatFlag)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.AllInstances.LockRegionInt64Int64LockType">
            <summary>Sets the shim of ComStream.LockRegion(Int64 libOffset, Int64 cb, LockType dwLockType)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.AllInstances.Revert">
            <summary>Sets the shim of ComStream.Revert()</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.AllInstances.SeekInt64SeekOrigin">
            <summary>Sets the shim of ComStream.Seek(Int64 dlibMove, SeekOrigin dwOrigin)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.AllInstances.SetSizeInt64">
            <summary>Sets the shim of ComStream.SetSize(Int64 libNewSize)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.AllInstances.UnlockRegionInt64Int64LockType">
            <summary>Sets the shim of ComStream.UnlockRegion(Int64 libOffset, Int64 cb, LockType dwLockType)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStream.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStream.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStream.Bind(SharpDX.ICallbackable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStream.Bind(SharpDX.IUnknown)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStream.Bind(SharpDX.Win32.IStream)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStream.Bind(SharpDX.Win32.IStreamBase)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStream.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.Clone">
            <summary>Sets the shim of ComStream.Clone()</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.CommitCommitFlags">
            <summary>Sets the shim of ComStream.Commit(CommitFlags grfCommitFlags)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.ConstructorIntPtr">
            <summary>Sets the shim of ComStream.ComStream(IntPtr nativePtr)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.CopyToIStreamInt64Int64Out">
            <summary>Sets the shim of ComStream.CopyTo(IStream streamDest, Int64 numberOfBytesToCopy, Int64&amp; bytesWritten)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.CopyTo_IntPtrInt64Int64Out">
            <summary>Sets the shim of ComStream.CopyTo_(IntPtr stmRef, Int64 cb, Int64&amp; cbWrittenRef)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.ExplicitOpIntPtrComStream">
            <summary>Sets the shim of ComStream.op_Explicit(IntPtr nativePointer)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.GetStatisticsStorageStatisticsFlags">
            <summary>Sets the shim of ComStream.GetStatistics(StorageStatisticsFlags grfStatFlag)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.LockRegionInt64Int64LockType">
            <summary>Sets the shim of ComStream.LockRegion(Int64 libOffset, Int64 cb, LockType dwLockType)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.Revert">
            <summary>Sets the shim of ComStream.Revert()</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.SeekInt64SeekOrigin">
            <summary>Sets the shim of ComStream.Seek(Int64 dlibMove, SeekOrigin dwOrigin)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.SetSizeInt64">
            <summary>Sets the shim of ComStream.SetSize(Int64 libNewSize)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.ToIntPtrIStream">
            <summary>Sets the shim of ComStream.ToIntPtr(IStream stream)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStream.UnlockRegionInt64Int64LockType">
            <summary>Sets the shim of ComStream.UnlockRegion(Int64 libOffset, Int64 cb, LockType dwLockType)</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimComStreamBase">
            <summary>Shim type of SharpDX.Win32.ComStreamBase</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStreamBase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStreamBase.#ctor(SharpDX.Win32.ComStreamBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimComStreamBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStreamBase.AllInstances.ReadIntPtrInt32">
            <summary>Sets the shim of ComStreamBase.Read(IntPtr vRef, Int32 cb)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStreamBase.AllInstances.WriteIntPtrInt32">
            <summary>Sets the shim of ComStreamBase.Write(IntPtr vRef, Int32 cb)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStreamBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStreamBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStreamBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStreamBase.Bind(SharpDX.ICallbackable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStreamBase.Bind(SharpDX.IUnknown)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStreamBase.Bind(SharpDX.Win32.IStreamBase)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimComStreamBase.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStreamBase.ConstructorIntPtr">
            <summary>Sets the shim of ComStreamBase.ComStreamBase(IntPtr nativePtr)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStreamBase.ExplicitOpIntPtrComStreamBase">
            <summary>Sets the shim of ComStreamBase.op_Explicit(IntPtr nativePointer)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStreamBase.ReadIntPtrInt32">
            <summary>Sets the shim of ComStreamBase.Read(IntPtr vRef, Int32 cb)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimComStreamBase.WriteIntPtrInt32">
            <summary>Sets the shim of ComStreamBase.Write(IntPtr vRef, Int32 cb)</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimErrorCodeHelper">
            <summary>Shim type of SharpDX.Win32.ErrorCodeHelper</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimErrorCodeHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimErrorCodeHelper.#ctor(SharpDX.Win32.ErrorCodeHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimErrorCodeHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimErrorCodeHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimErrorCodeHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimErrorCodeHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimErrorCodeHelper.Constructor">
            <summary>Sets the shim of ErrorCodeHelper.ErrorCodeHelper()</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimErrorCodeHelper.ToResultErrorCode">
            <summary>Sets the shim of ErrorCodeHelper.ToResult(ErrorCode errorCode)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimErrorCodeHelper.ToResultInt32">
            <summary>Sets the shim of ErrorCodeHelper.ToResult(Int32 errorCode)</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimNativeMessage">
            <summary>Shim type of SharpDX.Win32.NativeMessage</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimNativeMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimNativeMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimNativeMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimNativeMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimNativeMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimPropertyBag">
            <summary>Shim type of SharpDX.Win32.PropertyBag</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimPropertyBag.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimPropertyBag.#ctor(SharpDX.Win32.PropertyBag)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimPropertyBag.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBag.AllInstances.CheckIfInitialized">
            <summary>Sets the shim of PropertyBag.CheckIfInitialized()</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBag.AllInstances.CountGet">
            <summary>Sets the shim of PropertyBag.get_Count()</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimPropertyBag.AllInstances.GetOf2PropertyBagKeyOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SharpDX.Win32.PropertyBag,SharpDX.Win32.PropertyBagKey{``0,``1},``0})">
            <summary>Sets the shim of PropertyBag.Get(PropertyBagKey`2&lt;!!0,!!1&gt; propertyKey)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBag.AllInstances.GetString">
            <summary>Sets the shim of PropertyBag.Get(String name)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBag.AllInstances.KeysGet">
            <summary>Sets the shim of PropertyBag.get_Keys()</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBag.AllInstances.NativePointerUpdatedIntPtr">
            <summary>Sets the shim of PropertyBag.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimPropertyBag.AllInstances.SetOf2PropertyBagKeyOfM0M1M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{SharpDX.Win32.PropertyBag,SharpDX.Win32.PropertyBagKey{``0,``1},``0})">
            <summary>Sets the shim of PropertyBag.Set(PropertyBagKey`2&lt;!!0,!!1&gt; propertyKey, !!0 value)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBag.AllInstances.SetStringObject">
            <summary>Sets the shim of PropertyBag.Set(String name, Object value)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimPropertyBag.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimPropertyBag.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBag.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimPropertyBag.Bind(SharpDX.IUnknown)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimPropertyBag.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBag.CheckIfInitialized">
            <summary>Sets the shim of PropertyBag.CheckIfInitialized()</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBag.ConstructorIntPtr">
            <summary>Sets the shim of PropertyBag.PropertyBag(IntPtr propertyBagPointer)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBag.CountGet">
            <summary>Sets the shim of PropertyBag.get_Count()</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimPropertyBag.GetOf2PropertyBagKeyOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{SharpDX.Win32.PropertyBagKey{``0,``1},``0})">
            <summary>Sets the shim of PropertyBag.Get(PropertyBagKey`2&lt;!!0,!!1&gt; propertyKey)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBag.GetString">
            <summary>Sets the shim of PropertyBag.Get(String name)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBag.KeysGet">
            <summary>Sets the shim of PropertyBag.get_Keys()</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBag.NativePointerUpdatedIntPtr">
            <summary>Sets the shim of PropertyBag.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimPropertyBag.SetOf2PropertyBagKeyOfM0M1M0``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{SharpDX.Win32.PropertyBagKey{``0,``1},``0})">
            <summary>Sets the shim of PropertyBag.Set(PropertyBagKey`2&lt;!!0,!!1&gt; propertyKey, !!0 value)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBag.SetStringObject">
            <summary>Sets the shim of PropertyBag.Set(String name, Object value)</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimPropertyBagKey`2">
            <summary>Shim type of SharpDX.Win32.PropertyBagKey`2</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimPropertyBagKey`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimPropertyBagKey`2.#ctor(SharpDX.Win32.PropertyBagKey{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimPropertyBagKey`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBagKey`2.AllInstances.NameGet">
            <summary>Sets the shim of PropertyBagKey`2.get_Name()</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBagKey`2.AllInstances.NameSetString">
            <summary>Sets the shim of PropertyBagKey`2.set_Name(String value)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimPropertyBagKey`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimPropertyBagKey`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBagKey`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBagKey`2.ConstructorString">
            <summary>Sets the shim of PropertyBagKey`2.PropertyBagKey`2(String name)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBagKey`2.NameGet">
            <summary>Sets the shim of PropertyBagKey`2.get_Name()</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimPropertyBagKey`2.NameSetString">
            <summary>Sets the shim of PropertyBagKey`2.set_Name(String value)</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimSecurityAttributes">
            <summary>Shim type of SharpDX.Win32.SecurityAttributes</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimSecurityAttributes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimSecurityAttributes.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimSecurityAttributes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimSecurityAttributes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimSecurityAttributes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimStorageStatistics">
            <summary>Shim type of SharpDX.Win32.StorageStatistics</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimStorageStatistics.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimStorageStatistics.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimStorageStatistics.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimStorageStatistics.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimStorageStatistics.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimVariant">
            <summary>Shim type of SharpDX.Win32.Variant</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimVariant.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.ShimVariant.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimVariant.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.ShimVariant.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.ShimVariant.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.StubComBaseStreamNative">
            <summary>Stub type of SharpDX.Win32.ComBaseStreamNative</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubComBaseStreamNative.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubComBaseStreamNative.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubComBaseStreamNative.InitializeStub">
            <summary>Initializes a new instance of type StubComBaseStreamNative</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubComBaseStreamNative.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubComBaseStreamNative.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.StubComStream">
            <summary>Stub type of SharpDX.Win32.ComStream</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubComStream.#ctor(System.IntPtr)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubComStream.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubComStream.Dispose(System.Boolean)">
            <summary>Sets the stub of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubComStream.DisposeBoolean">
            <summary>Sets the stub of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubComStream.InitializeStub">
            <summary>Initializes a new instance of type StubComStream</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubComStream.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubComStream.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubComStream.NativePointerUpdated(System.IntPtr)">
            <summary>Sets the stub of ComObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubComStream.NativePointerUpdatedIntPtr">
            <summary>Sets the stub of ComObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubComStream.NativePointerUpdating">
            <summary>Sets the stub of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubComStream.NativePointerUpdating01">
            <summary>Sets the stub of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.StubComStreamBase">
            <summary>Stub type of SharpDX.Win32.ComStreamBase</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubComStreamBase.#ctor(System.IntPtr)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubComStreamBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubComStreamBase.Dispose(System.Boolean)">
            <summary>Sets the stub of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubComStreamBase.DisposeBoolean">
            <summary>Sets the stub of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubComStreamBase.InitializeStub">
            <summary>Initializes a new instance of type StubComStreamBase</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubComStreamBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubComStreamBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubComStreamBase.NativePointerUpdated(System.IntPtr)">
            <summary>Sets the stub of ComObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubComStreamBase.NativePointerUpdatedIntPtr">
            <summary>Sets the stub of ComObject.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubComStreamBase.NativePointerUpdating">
            <summary>Sets the stub of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubComStreamBase.NativePointerUpdating01">
            <summary>Sets the stub of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.StubErrorCodeHelper">
            <summary>Stub type of SharpDX.Win32.ErrorCodeHelper</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubErrorCodeHelper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubErrorCodeHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubErrorCodeHelper.InitializeStub">
            <summary>Initializes a new instance of type StubErrorCodeHelper</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubErrorCodeHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubErrorCodeHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.StubIStream">
            <summary>Stub type of SharpDX.Win32.IStream</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStream.#ctor">
            <summary>Initializes a new instance of type StubIStream</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStream.AttachBackingFieldToShadow">
            <summary>Attaches delegates to emulate StubIStream.Shadow as a property with a backing field.</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStream.Clone">
            <summary>Sets the stub of IStream.Clone()</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStream.CommitCommitFlags">
            <summary>Sets the stub of IStream.Commit(CommitFlags commitFlags)</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStream.CopyToIStreamInt64Int64Out">
            <summary>Sets the stub of IStream.CopyTo(IStream streamDest, Int64 numberOfBytesToCopy, Int64&amp; bytesWritten)</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStream.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStream.GetStatisticsStorageStatisticsFlags">
            <summary>Sets the stub of IStream.GetStatistics(StorageStatisticsFlags storageStatisticsFlags)</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStream.LockRegionInt64Int64LockType">
            <summary>Sets the stub of IStream.LockRegion(Int64 offset, Int64 numberOfBytesToLock, LockType dwLockType)</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStream.ReadIntPtrInt32">
            <summary>Sets the stub of IStreamBase.Read(IntPtr buffer, Int32 numberOfBytesToRead)</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStream.Revert">
            <summary>Sets the stub of IStream.Revert()</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStream.SeekInt64SeekOrigin">
            <summary>Sets the stub of IStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStream.SetSizeInt64">
            <summary>Sets the stub of IStream.SetSize(Int64 newSize)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubIStream.SharpDX#ICallbackable#Shadow">
            <summary>Sets the stub of ICallbackable.get_Shadow()</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStream.ShadowGet">
            <summary>Sets the stub of ICallbackable.get_Shadow()</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStream.ShadowSetIDisposable">
            <summary>Sets the stub of ICallbackable.set_Shadow(IDisposable value)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStream.SharpDX#Win32#IStream#Clone">
            <summary>Sets the stub of IStream.Clone()</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStream.SharpDX#Win32#IStream#Commit(SharpDX.Win32.CommitFlags)">
            <summary>Sets the stub of IStream.Commit(CommitFlags commitFlags)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStream.SharpDX#Win32#IStream#CopyTo(SharpDX.Win32.IStream,System.Int64,System.Int64@)">
            <summary>Sets the stub of IStream.CopyTo(IStream streamDest, Int64 numberOfBytesToCopy, Int64&amp; bytesWritten)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStream.SharpDX#Win32#IStream#GetStatistics(SharpDX.Win32.StorageStatisticsFlags)">
            <summary>Sets the stub of IStream.GetStatistics(StorageStatisticsFlags storageStatisticsFlags)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStream.SharpDX#Win32#IStream#LockRegion(System.Int64,System.Int64,SharpDX.Win32.LockType)">
            <summary>Sets the stub of IStream.LockRegion(Int64 offset, Int64 numberOfBytesToLock, LockType dwLockType)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStream.SharpDX#Win32#IStream#Revert">
            <summary>Sets the stub of IStream.Revert()</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStream.SharpDX#Win32#IStream#Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the stub of IStream.Seek(Int64 offset, SeekOrigin origin)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStream.SharpDX#Win32#IStream#SetSize(System.Int64)">
            <summary>Sets the stub of IStream.SetSize(Int64 newSize)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStream.SharpDX#Win32#IStream#UnlockRegion(System.Int64,System.Int64,SharpDX.Win32.LockType)">
            <summary>Sets the stub of IStream.UnlockRegion(Int64 offset, Int64 numberOfBytesToLock, LockType dwLockType)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStream.SharpDX#Win32#IStreamBase#Read(System.IntPtr,System.Int32)">
            <summary>Sets the stub of IStreamBase.Read(IntPtr buffer, Int32 numberOfBytesToRead)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStream.SharpDX#Win32#IStreamBase#Write(System.IntPtr,System.Int32)">
            <summary>Sets the stub of IStreamBase.Write(IntPtr buffer, Int32 numberOfBytesToRead)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStream.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStream.UnlockRegionInt64Int64LockType">
            <summary>Sets the stub of IStream.UnlockRegion(Int64 offset, Int64 numberOfBytesToLock, LockType dwLockType)</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStream.WriteIntPtrInt32">
            <summary>Sets the stub of IStreamBase.Write(IntPtr buffer, Int32 numberOfBytesToRead)</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.StubIStreamBase">
            <summary>Stub type of SharpDX.Win32.IStreamBase</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStreamBase.#ctor">
            <summary>Initializes a new instance of type StubIStreamBase</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStreamBase.AttachBackingFieldToShadow">
            <summary>Attaches delegates to emulate StubIStreamBase.Shadow as a property with a backing field.</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStreamBase.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStreamBase.ReadIntPtrInt32">
            <summary>Sets the stub of IStreamBase.Read(IntPtr buffer, Int32 numberOfBytesToRead)</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubIStreamBase.SharpDX#ICallbackable#Shadow">
            <summary>Sets the stub of ICallbackable.get_Shadow()</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStreamBase.ShadowGet">
            <summary>Sets the stub of ICallbackable.get_Shadow()</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStreamBase.ShadowSetIDisposable">
            <summary>Sets the stub of ICallbackable.set_Shadow(IDisposable value)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStreamBase.SharpDX#Win32#IStreamBase#Read(System.IntPtr,System.Int32)">
            <summary>Sets the stub of IStreamBase.Read(IntPtr buffer, Int32 numberOfBytesToRead)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStreamBase.SharpDX#Win32#IStreamBase#Write(System.IntPtr,System.Int32)">
            <summary>Sets the stub of IStreamBase.Write(IntPtr buffer, Int32 numberOfBytesToRead)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubIStreamBase.System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubIStreamBase.WriteIntPtrInt32">
            <summary>Sets the stub of IStreamBase.Write(IntPtr buffer, Int32 numberOfBytesToRead)</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.StubPropertyBag">
            <summary>Stub type of SharpDX.Win32.PropertyBag</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubPropertyBag.#ctor(System.IntPtr)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubPropertyBag.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubPropertyBag.Dispose(System.Boolean)">
            <summary>Sets the stub of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubPropertyBag.DisposeBoolean">
            <summary>Sets the stub of ComObject.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubPropertyBag.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyBag</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubPropertyBag.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubPropertyBag.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubPropertyBag.NativePointerUpdated(System.IntPtr)">
            <summary>Sets the stub of PropertyBag.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubPropertyBag.NativePointerUpdatedIntPtr">
            <summary>Sets the stub of PropertyBag.NativePointerUpdated(IntPtr oldNativePointer)</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubPropertyBag.NativePointerUpdating">
            <summary>Sets the stub of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="F:SharpDX.Win32.Fakes.StubPropertyBag.NativePointerUpdating01">
            <summary>Sets the stub of ComObject.NativePointerUpdating()</summary>
        </member>
        <member name="T:SharpDX.Win32.Fakes.StubPropertyBagKey`2">
            <summary>Stub type of SharpDX.Win32.PropertyBagKey`2</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubPropertyBagKey`2.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubPropertyBagKey`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:SharpDX.Win32.Fakes.StubPropertyBagKey`2.InitializeStub">
            <summary>Initializes a new instance of type StubPropertyBagKey</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubPropertyBagKey`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:SharpDX.Win32.Fakes.StubPropertyBagKey`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
